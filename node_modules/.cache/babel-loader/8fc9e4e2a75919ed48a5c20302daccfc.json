{"ast":null,"code":"import Web3 from \"web3\";\nexport const getUserBalance = async () => {\n  try {\n    const web3 = await getWeb3();\n    const accountAddress = await getAccount();\n    let balance = await web3.eth.getBalance(accountAddress); // balance = new BigNumber(balance).div(new BigNumber(10).exponentiatedBy(18))\n\n    return balance;\n  } catch (err) {\n    console.log(\"error\", err);\n    return 0;\n  }\n};\nexport const getWeb3 = async () => {\n  try {\n    const web3 = new Web3(Web3.givenProvider);\n    return web3;\n  } catch (err) {\n    console.log(\"error\", err);\n  }\n};\nexport const getAccount = async () => {\n  try {\n    const web3 = await getWeb3();\n    const accountAddress = await web3.eth.getAccounts();\n    return accountAddress[0];\n  } catch (err) {\n    console.log(\"error\", err);\n  }\n};","map":{"version":3,"sources":["/home/neha/exq-ico-1/src/helpers/currentWalletHelper.js"],"names":["Web3","getUserBalance","web3","getWeb3","accountAddress","getAccount","balance","eth","getBalance","err","console","log","givenProvider","getAccounts"],"mappings":"AACA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACtC,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMC,OAAO,EAA1B;AACA,UAAMC,cAAc,GAAG,MAAMC,UAAU,EAAvC;AACA,QAAIC,OAAO,GAAG,MAAMJ,IAAI,CAACK,GAAL,CAASC,UAAT,CAAoBJ,cAApB,CAApB,CAHA,CAIA;;AACA,WAAOE,OAAP;AACH,GAND,CAOA,OAAOG,GAAP,EAAY;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB;AACA,WAAO,CAAP;AACH;AACJ,CAZM;AAcP,OAAO,MAAMN,OAAO,GAAG,YAAY;AAC/B,MAAI;AACA,UAAMD,IAAI,GAAG,IAAIF,IAAJ,CAASA,IAAI,CAACY,aAAd,CAAb;AACA,WAAOV,IAAP;AACH,GAHD,CAIA,OAAOO,GAAP,EAAY;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB;AACH;AACJ,CARM;AAUP,OAAO,MAAMJ,UAAU,GAAG,YAAY;AAClC,MAAI;AACA,UAAMH,IAAI,GAAG,MAAMC,OAAO,EAA1B;AACA,UAAMC,cAAc,GAAG,MAAMF,IAAI,CAACK,GAAL,CAASM,WAAT,EAA7B;AACA,WAAOT,cAAc,CAAC,CAAD,CAArB;AACH,GAJD,CAKA,OAAOK,GAAP,EAAY;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB;AACH;AACJ,CATM","sourcesContent":["\nimport Web3 from \"web3\"\n\nexport const getUserBalance = async () => {\n    try {\n        const web3 = await getWeb3();\n        const accountAddress = await getAccount()\n        let balance = await web3.eth.getBalance(accountAddress)\n        // balance = new BigNumber(balance).div(new BigNumber(10).exponentiatedBy(18))\n        return balance\n    }\n    catch (err) {\n        console.log(\"error\", err)\n        return 0;\n    }\n}\n\nexport const getWeb3 = async () => {\n    try {\n        const web3 = new Web3(Web3.givenProvider);\n        return web3;\n    }\n    catch (err) {\n        console.log(\"error\", err)\n    }\n}\n\nexport const getAccount = async () => {\n    try {\n        const web3 = await getWeb3()\n        const accountAddress = await web3.eth.getAccounts()\n        return accountAddress[0]\n    }\n    catch (err) {\n        console.log(\"error\", err)\n    }\n}"]},"metadata":{},"sourceType":"module"}