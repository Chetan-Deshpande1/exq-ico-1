{"ast":null,"code":"var _jsxFileName = \"/home/neha/exq-ico-1/src/components/Main/swap/swap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback } from \"react\";\nimport { Container, Row } from \"reactstrap\";\nimport { useState } from \"react\";\nimport \"./swap.scss\";\nimport { Card, Button, CardHeader, CardFooter, CardBody, CardTitle, CardText, Col, InputGroup, InputGroupAddon } from \"reactstrap\";\nimport { Icon, Input } from \"semantic-ui-react\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport { checkIfApproved, getTokenBalance, getEquivalentToken, getCurrId, generateRefLink, getCurrPrice, getEQXBalance, getCorrespondingEQX } from \"../../../helpers/getterFunctions\";\nimport { connect } from \"react-redux\";\nimport { approveTokens, buyToken } from \"./../../../helpers/setterFunctions\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport AccountModal from \"../../header/Accountmodal\";\nimport { convertToInternationalCurrencySystem } from \"../../../helpers/numberFormatter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst options = [\"USDT\", \"BNB\", \"BTC\", \"ETH\", \"BUSD\"];\n\nconst Swap = props => {\n  _s();\n\n  const [inputAmount, setInputAmount] = useState(\"\");\n  const [outputAmount, setOutputAmount] = useState(\"\");\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [buttonName, setButtonName] = useState(\"BUY EQX\");\n  const [currTokenBal, setCurTokenBal] = useState(\"\");\n  const [refLink, setRefLink] = useState(\"\");\n  const [value, setValue] = useState({\n    \"value\": \"USDT\",\n    \"label\": \"USDT\"\n  });\n  const [ref, setRef] = useState(\"10000\");\n  const [transactionOnGoing, setTransactionOnGoing] = useState(false);\n  const [copySuccess, setCopySuccess] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [eqxBalance, setEqxBalance] = useState(\"\");\n  useEffect(async () => {\n    reset();\n    getBalance(); // getCorrespondingEQX(\"100\",\"eth\")\n  }, [value]);\n  useEffect(async () => {\n    await getBalance();\n  }, [props.account]);\n  useEffect(async () => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const id = queryParams.get(\"id\");\n    let currId = await getCurrId();\n    setPrice(await getCurrPrice());\n    console.log(\"id----------->\", id);\n\n    if (Number(currId) >= Number(id) && Number(id) > 10000) {\n      console.log(\"here I am\");\n      localStorage.setItem(\"ref\", id);\n      setRef(id);\n    }\n  }, [props.account]); // useEffect(()=>{\n  //   let interval=setInterval(async()=>{\n  //     if(value)\n  //     setOutputAmount(await getEquivalentToken(inputAmount,value.value.toLowerCase()))\n  //   },1000)\n  // },[inputAmount,value])\n\n  useEffect(async () => {\n    if (props.account && props.account.account) {\n      let link = await generateRefLink(props.account.account);\n      console.log(\"ref------>\", link);\n      setRefLink(link);\n    }\n  }, [props.account]);\n  useEffect(async () => {\n    try {\n      if (!value) return;\n      if (value.value == \"BNB\") setButtonName(\"BUY TOKEN\");else {\n        let res = await checkAllowance();\n        console.log(\"res--------->\", res);\n        if (res == true) setButtonName(\"BUY TOKEN\");else setButtonName(\"APPROVE\");\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [value, props.account, inputAmount, transactionOnGoing]);\n  const handleOutputChange = useCallback(async e => {\n    console.log(\"heeeee--------\");\n\n    if (value && value.value) {\n      let _input = await getCorrespondingEQX(e.target.value, value.value.toLowerCase());\n\n      setInputAmount(_input);\n    }\n  }, [outputAmount, value]); // useEffect(()=>{\n  //   handleOutputChange()\n  // },[outputAmount,value])\n\n  const handleSelect = useCallback(async e => {\n    try {\n      console.log(\"selected value is -----\", e);\n      setValue(e);\n      setOutputAmount(await getEquivalentToken(inputAmount, e.value));\n      await getBalance();\n      await checkAllowance();\n    } catch (e) {\n      console.log(e);\n    }\n  }, [props.account, inputAmount]);\n\n  const getBalance = async () => {\n    try {\n      console.log(\"output dropdown\", typeof value.value);\n      let res;\n      let eqxBal;\n\n      if (value && value.value) {\n        if (props.account && props.account.account) {\n          res = await getTokenBalance(value.value.toLowerCase(), props.account.account);\n          eqxBal = await getTokenBalance(\"eqx\", props.account.account);\n        }\n\n        setCurTokenBal(res);\n        setEqxBalance(eqxBal);\n        console.log(\"res\", res);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const checkAllowance = async () => {\n    try {\n      if (value && value.value == \"BNB\") return;\n\n      if (props.account && props.account.account && value && outputAmount) {\n        let res = await checkIfApproved(outputAmount, value.value.toLowerCase(), props.account.account);\n        return res;\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const approveToken = async () => {\n    try {\n      if (props.account && props.account.account && value && inputAmount) {\n        setTransactionOnGoing(true);\n        setIsDisabled(true);\n        let res = await approveTokens(value.value.toLowerCase(), props.account.account);\n        setIsDisabled(false);\n\n        if (res.status == true) {\n          toast.success(\"Transaction successful\");\n        } else {\n          toast.error(\"Transaction Failed\");\n        }\n\n        setTransactionOnGoing(false);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const purchaseToken = async () => {\n    try {\n      if (props.account && props.account.account && value && inputAmount) {\n        setTransactionOnGoing(true);\n        setIsDisabled(true);\n\n        if (ref == \"\") {\n          ref = 10000;\n        }\n\n        let res = await buyToken(inputAmount, ref, value.value.toLowerCase(), props.account.account);\n        setIsDisabled(false);\n\n        if (res.status == true) {\n          toast.success(\"Transaction successful\");\n        } else {\n          toast.error(\"Transaction Failed\");\n        }\n\n        await getBalance();\n        setTransactionOnGoing(false);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  function copyToClipboard(e) {\n    var textField = document.createElement(\"textarea\");\n    textField.innerText = refLink;\n    document.body.appendChild(textField);\n    textField.select();\n    document.execCommand(\"copy\");\n    textField.remove();\n    setCopySuccess(\"Copied!\");\n    toast.success(\"Referral Link Copied\");\n    console.log(\"refferal link is copied------->\", refLink);\n  }\n\n  async function reset() {\n    setInputAmount(null);\n    setOutputAmount(null);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"swap\",\n      fluid: \"true\",\n      id: \"swap\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: \"swap__box\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"exchange\",\n              children: \"Buy EQX\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"exchange-title\",\n              children: \"Trade tokens in an instant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            tag: \"h5\",\n            className: \"price-sec\",\n            children: [\"1 EQX = $\", price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"exchange-1\",\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                lg: 6,\n                className: \"ex-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                lg: 6,\n                className: \"ex-2\",\n                children: [\"Balance:\", eqxBalance ? convertToInternationalCurrencySystem(eqxBalance) : 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              lg: 12,\n              className: \"exchange-box\",\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                label: \"EQX\",\n                onChange: async e => {\n                  setInputAmount(e.target.value);\n                  setOutputAmount(await getEquivalentToken(e.target.value, value.value.toLowerCase()));\n                },\n                labelPosition: \"right\",\n                placeholder: \"0.0\",\n                className: \"token-1\",\n                value: inputAmount ? inputAmount : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"arrow down\",\n            className: \"exchange-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"exchange-1\",\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                lg: 6,\n                className: \"ex-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                lg: 6,\n                className: \"ex-2\",\n                children: [\"Balance:\", currTokenBal && currTokenBal ? convertToInternationalCurrencySystem(currTokenBal) : 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              lg: 12,\n              className: \"exchange-box\",\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                label: /*#__PURE__*/_jsxDEV(Dropdown, {\n                  defaultValue: \"BNB\",\n                  options: options,\n                  onChange: handleSelect,\n                  onClick: reset\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 21\n                }, this),\n                editable: false,\n                value: outputAmount ? outputAmount : \"\",\n                onChange: async e => {\n                  setOutputAmount(e.target.value);\n                  await handleOutputChange(e);\n                },\n                labelPosition: \"right\",\n                placeholder: \"0.0\",\n                className: \"token-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"exchange-1 referrer\",\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Referred By\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              lg: 12,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: ref,\n                onChange: e => setRef(e.target.value),\n                className: \"ref-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), props.account ? /*#__PURE__*/_jsxDEV(Button, {\n            className: \"swap-btn\",\n            color: \"primary\",\n            size: \"lg\",\n            block: true,\n            onClick: () => {\n              buttonName == \"APPROVE\" ? approveToken() : purchaseToken();\n            },\n            children: buttonName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(AccountModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"ref-copy\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"ref-link\",\n              children: \" Your Referral Link : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"ref-copy--btn\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                lg: 8,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  onChange: t => {\n                    copyToClipboard();\n                  },\n                  type: \"text\",\n                  name: \"amount\",\n                  id: \"amount\",\n                  value: refLink ? refLink : \"No Referral Link available\",\n                  className: \"ref-input\",\n                  onClick: copyToClipboard\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                lg: 4\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"NOTE:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), \" Buy only at app.equinox.business and always ensure you are interacting with right contract address.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Swap, \"QCEf4jqe70+fxlXiWvFEAIeqiGI=\");\n\n_c = Swap;\n\nconst mapStateToProps = state => {\n  return {\n    account: state.account\n  };\n};\n\nexport default connect(mapStateToProps)(Swap);\n\nvar _c;\n\n$RefreshReg$(_c, \"Swap\");","map":{"version":3,"sources":["/home/neha/exq-ico-1/src/components/Main/swap/swap.js"],"names":["React","useEffect","useCallback","Container","Row","useState","Card","Button","CardHeader","CardFooter","CardBody","CardTitle","CardText","Col","InputGroup","InputGroupAddon","Icon","Input","Dropdown","checkIfApproved","getTokenBalance","getEquivalentToken","getCurrId","generateRefLink","getCurrPrice","getEQXBalance","getCorrespondingEQX","connect","approveTokens","buyToken","ToastContainer","toast","AccountModal","convertToInternationalCurrencySystem","options","Swap","props","inputAmount","setInputAmount","outputAmount","setOutputAmount","isDisabled","setIsDisabled","buttonName","setButtonName","currTokenBal","setCurTokenBal","refLink","setRefLink","value","setValue","ref","setRef","transactionOnGoing","setTransactionOnGoing","copySuccess","setCopySuccess","price","setPrice","eqxBalance","setEqxBalance","reset","getBalance","account","queryParams","URLSearchParams","window","location","search","id","get","currId","console","log","Number","localStorage","setItem","link","res","checkAllowance","e","handleOutputChange","_input","target","toLowerCase","handleSelect","eqxBal","approveToken","status","success","error","purchaseToken","copyToClipboard","textField","document","createElement","innerText","body","appendChild","select","execCommand","remove","t","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback } from \"react\";\nimport { Container, Row } from \"reactstrap\";\nimport { useState } from \"react\";\nimport \"./swap.scss\";\nimport {\n  Card,\n  Button,\n  CardHeader,\n  CardFooter,\n  CardBody,\n  CardTitle,\n  CardText,\n  Col,\n  InputGroup,\n  InputGroupAddon,\n} from \"reactstrap\";\nimport { Icon, Input } from \"semantic-ui-react\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport {\n  checkIfApproved,\n  getTokenBalance,\n  getEquivalentToken,\n  getCurrId,\n  generateRefLink,\n  getCurrPrice,\n  getEQXBalance,\n  getCorrespondingEQX,\n} from \"../../../helpers/getterFunctions\";\nimport { connect } from \"react-redux\";\nimport { approveTokens, buyToken } from \"./../../../helpers/setterFunctions\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport AccountModal from \"../../header/Accountmodal\";\nimport { convertToInternationalCurrencySystem } from \"../../../helpers/numberFormatter\";\nconst options = [\"USDT\", \"BNB\", \"BTC\", \"ETH\", \"BUSD\"];\n\nconst Swap = (props) => {\n  const [inputAmount, setInputAmount] = useState(\"\");\n  const [outputAmount, setOutputAmount] = useState(\"\");\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [buttonName, setButtonName] = useState(\"BUY EQX\");\n  const [currTokenBal, setCurTokenBal] = useState(\"\");\n  const [refLink, setRefLink] = useState(\"\");\n  const [value, setValue] = useState({ \"value\": \"USDT\", \"label\": \"USDT\" });\n  const [ref, setRef] = useState(\"10000\");\n  const [transactionOnGoing, setTransactionOnGoing] = useState(false);\n  const [copySuccess, setCopySuccess] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [eqxBalance, setEqxBalance] = useState(\"\");\n\n\n  useEffect(async () => {\n    reset()\n    getBalance()\n    // getCorrespondingEQX(\"100\",\"eth\")\n  }, [value]);\n\n  useEffect(async () => {\n    await getBalance()\n  }, [props.account])\n\n  useEffect(async () => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const id = queryParams.get(\"id\");\n    let currId = await getCurrId();\n    setPrice(await getCurrPrice())\n    console.log(\"id----------->\", id);\n    if (Number(currId) >= Number(id) && Number(id) > 10000) {\n      console.log(\"here I am\");\n      localStorage.setItem(\"ref\", id);\n      setRef(id);\n    }\n  }, [props.account]);\n\n  // useEffect(()=>{\n  //   let interval=setInterval(async()=>{\n  //     if(value)\n  //     setOutputAmount(await getEquivalentToken(inputAmount,value.value.toLowerCase()))\n  //   },1000)\n  // },[inputAmount,value])\n\n  useEffect(async () => {\n    if (props.account && props.account.account) {\n      let link = await generateRefLink(props.account.account);\n      console.log(\"ref------>\", link);\n      setRefLink(link);\n    }\n  }, [props.account]);\n\n  useEffect(async () => {\n    try {\n      if (!value) return;\n      if (value.value == \"BNB\") setButtonName(\"BUY TOKEN\");\n      else {\n        let res = await checkAllowance();\n        console.log(\"res--------->\", res);\n        if (res == true) setButtonName(\"BUY TOKEN\");\n        else setButtonName(\"APPROVE\");\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [value, props.account, inputAmount, transactionOnGoing]);\n\n  const handleOutputChange = useCallback(async (e) => {\n    console.log(\"heeeee--------\")\n    if (value && value.value) {\n      let _input = await getCorrespondingEQX(e.target.value, value.value.toLowerCase())\n      setInputAmount(_input);\n    }\n\n  }, [outputAmount, value])\n\n  // useEffect(()=>{\n  //   handleOutputChange()\n  // },[outputAmount,value])\n\n  const handleSelect = useCallback(async (e) => {\n    try {\n      console.log(\"selected value is -----\", e);\n      setValue(e);\n      setOutputAmount(\n        await getEquivalentToken(\n          inputAmount,\n          e.value\n        )\n      );\n      await getBalance();\n      await checkAllowance();\n    } catch (e) {\n      console.log(e);\n    }\n  }, [props.account, inputAmount]);\n\n  const getBalance = async () => {\n    try {\n      console.log(\"output dropdown\", typeof value.value);\n      let res;\n      let eqxBal;\n      if (value && value.value) {\n        if (props.account && props.account.account) {\n          res = await getTokenBalance(\n            value.value.toLowerCase(),\n            props.account.account\n          );\n          eqxBal = await getTokenBalance(\"eqx\", props.account.account)\n        }\n        setCurTokenBal(res);\n        setEqxBalance(eqxBal);\n        console.log(\"res\", res);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const checkAllowance = async () => {\n    try {\n      if (value && value.value == \"BNB\") return;\n      if (props.account && props.account.account && value && outputAmount) {\n        let res = await checkIfApproved(\n          outputAmount,\n          value.value.toLowerCase(),\n          props.account.account\n        );\n        return res;\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const approveToken = async () => {\n    try {\n      if (props.account && props.account.account && value && inputAmount) {\n        setTransactionOnGoing(true);\n        setIsDisabled(true);\n        let res = await approveTokens(\n          value.value.toLowerCase(),\n          props.account.account\n        );\n\n        setIsDisabled(false);\n        if (res.status == true) {\n          toast.success(\"Transaction successful\")\n        } else {\n          toast.error(\"Transaction Failed\");\n        }\n        setTransactionOnGoing(false);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const purchaseToken = async () => {\n    try {\n      if (props.account && props.account.account && value && inputAmount) {\n        setTransactionOnGoing(true)\n        setIsDisabled(true);\n        if (ref == \"\") {\n          ref = 10000;\n        }\n        let res = await buyToken(\n          inputAmount,\n          ref,\n          value.value.toLowerCase(),\n          props.account.account\n        );\n\n        setIsDisabled(false);\n        if (res.status == true) {\n          toast.success(\"Transaction successful\");\n        } else {\n          toast.error(\"Transaction Failed\");\n        }\n        await getBalance()\n        setTransactionOnGoing(false);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  function copyToClipboard(e) {\n    var textField = document.createElement(\"textarea\");\n    textField.innerText = refLink;\n    document.body.appendChild(textField);\n    textField.select();\n    document.execCommand(\"copy\");\n    textField.remove();\n\n    setCopySuccess(\"Copied!\");\n    toast.success(\"Referral Link Copied\");\n    console.log(\"refferal link is copied------->\", refLink);\n  }\n\n  async function reset() {\n    setInputAmount(null)\n    setOutputAmount(null)\n  }\n\n\n  return (\n    <>\n      <Container className=\"swap\" fluid=\"true\" id=\"swap\">\n        <Card className=\"swap__box\">\n          <CardHeader>\n            <Col>\n              <h2 className=\"exchange\">Buy EQX</h2>\n              <h6 className=\"exchange-title\">Trade tokens in an instant</h6>\n            </Col>\n          </CardHeader>\n          <CardBody>\n            <CardTitle tag=\"h5\" className=\"price-sec\">1 EQX = ${price}</CardTitle>\n            <Row className=\"exchange-1\">\n              <Row>\n                <Col lg={6} className=\"ex-1\">\n                  {/* From */}\n                </Col>\n                <Col lg={6} className=\"ex-2\">\n                  Balance:{eqxBalance ? convertToInternationalCurrencySystem(eqxBalance) : 0}\n                </Col>\n              </Row>\n              <Col lg={12} className=\"exchange-box\">\n                <Input\n                  label={\"EQX\"}\n                  onChange={async (e) => {\n                    setInputAmount(e.target.value);\n                    setOutputAmount(\n                      await getEquivalentToken(\n                        e.target.value,\n                        value.value.toLowerCase()\n                      )\n                    );\n                  }}\n                  labelPosition=\"right\"\n                  placeholder=\"0.0\"\n                  className=\"token-1\"\n                  value={inputAmount ? inputAmount : \"\"}\n                />\n              </Col>\n            </Row>\n            <Icon name=\"arrow down\" className=\"exchange-icon\" />\n            <Row className=\"exchange-1\">\n              <Row>\n                <Col lg={6} className=\"ex-1\">\n                  {/* To */}\n                </Col>\n                <Col lg={6} className=\"ex-2\">\n                  Balance:{currTokenBal && currTokenBal ? convertToInternationalCurrencySystem(currTokenBal) : 0}\n                </Col>\n              </Row>\n              <Col lg={12} className=\"exchange-box\">\n                <Input\n                  label={\n                    <Dropdown\n                      defaultValue=\"BNB\"\n                      options={options}\n                      onChange={handleSelect}\n                      onClick={reset}\n                    />\n                  }\n                  editable={false}\n                  value={outputAmount ? outputAmount : \"\"}\n                  onChange={async(e) => {\n                    setOutputAmount(e.target.value)\n                    await handleOutputChange(e)\n                  }\n                  }\n                  labelPosition=\"right\"\n                  placeholder=\"0.0\"\n                  className=\"token-1\"\n                />\n              </Col>\n            </Row>\n            <Row className=\"exchange-1 referrer\">\n              <Row>\n                <h5>Referred By</h5>\n              </Row>\n              <Col lg={12}>\n                <input\n                  type=\"text\"\n                  value={ref}\n                  onChange={(e) => setRef(e.target.value)}\n                  className=\"ref-input\"\n                />\n              </Col>\n            </Row>\n            {props.account ?\n              <Button\n                className=\"swap-btn\"\n                color=\"primary\"\n                size=\"lg\"\n                block\n                onClick={() => {\n                  buttonName == \"APPROVE\" ? approveToken() : purchaseToken();\n                }}\n              >\n                {buttonName}\n              </Button>\n\n              : <AccountModal />}\n\n            <Row className=\"ref-copy\">\n              <h4 className=\"ref-link\"> Your Referral Link : </h4>\n              <Row className=\"ref-copy--btn\">\n                <Col lg={8}>\n                  <Input\n                    onChange={(t) => {\n                      copyToClipboard();\n                    }}\n                    type=\"text\"\n                    name=\"amount\"\n                    id=\"amount\"\n                    value={refLink ? refLink : \"No Referral Link available\"}\n                    className=\"ref-input\"\n                    onClick={copyToClipboard}\n                  />\n                </Col>\n                <Col lg={4}>\n\n                  {/* <Button\n                    className=\"swap-btn\"\n                    onClick={() => {\n                      copyToClipboard();\n                    }}\n                  >\n                    COPY\n                  </Button> */}\n                </Col>\n              </Row>\n            </Row>\n          </CardBody>\n          <CardFooter>\n            <b>NOTE:</b> Buy only at app.equinox.business and always ensure you are interacting with right contract address.\n          </CardFooter>\n        </Card>\n        <ToastContainer />\n      </Container>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    account: state.account,\n  };\n};\n\nexport default connect(mapStateToProps)(Swap);\n"]},"metadata":{},"sourceType":"module"}