{"ast":null,"code":"import { ACCOUNT_UPDATE, WEB3_LOADED, ACCOUNT_UPDATE_ON_DISCONNECT, SWAP_SUCCESS, SWAP_SUCCESS_RESET, ADD_LIQUIDITY_SUCCESS, ADD_LIQUIDITY_SUCCESS_RESET, STAKE_UNSTAKE_SUCCESS, STAKE_UNSTAKE_SUCCESS_RESET, REMOVE_LIQUIDITY_SUCCESS, REMOVE_LIQUIDITY_SUCCESS_RESET } from \"../constants/action-types\";\nconst initialState = {\n  account: null,\n  web3: null,\n  blockchainClient: null,\n  myData: {},\n  ixfiStat: [],\n  loading: true,\n  tokensBalance: [],\n  swapSuccess: false,\n  addLiquiditySuccess: false,\n  stakeUnStakeSuccess: false,\n  removeLiquiditySuccess: false\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACCOUNT_UPDATE:\n      return Object.assign({}, state, {\n        account: action.payload\n      });\n\n    case WEB3_LOADED:\n      return Object.assign({}, state, {\n        web3: action.payload\n      });\n\n    case ACCOUNT_UPDATE_ON_DISCONNECT:\n      return Object.assign({}, state, {\n        account: null\n      });\n\n    case SWAP_SUCCESS:\n      return { ...state,\n        swapSuccess: true\n      };\n\n    case SWAP_SUCCESS_RESET:\n      return { ...state,\n        swapSuccess: false\n      };\n\n    case ADD_LIQUIDITY_SUCCESS:\n      return { ...state,\n        addLiquiditySuccess: true\n      };\n\n    case ADD_LIQUIDITY_SUCCESS_RESET:\n      return { ...state,\n        addLiquiditySuccess: false\n      };\n\n    case STAKE_UNSTAKE_SUCCESS:\n      return { ...state,\n        stakeUnStakeSuccess: true\n      };\n\n    case STAKE_UNSTAKE_SUCCESS_RESET:\n      return { ...state,\n        stakeUnStakeSuccess: false\n      };\n\n    case REMOVE_LIQUIDITY_SUCCESS:\n      return { ...state,\n        removeLiquiditySuccess: true\n      };\n\n    case REMOVE_LIQUIDITY_SUCCESS_RESET:\n      return { ...state,\n        removeLiquiditySuccess: false\n      };\n\n    default:\n      {\n        return state;\n      }\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/home/neha/exq-ico-1/src/redux/reducers/index.js"],"names":["ACCOUNT_UPDATE","WEB3_LOADED","ACCOUNT_UPDATE_ON_DISCONNECT","SWAP_SUCCESS","SWAP_SUCCESS_RESET","ADD_LIQUIDITY_SUCCESS","ADD_LIQUIDITY_SUCCESS_RESET","STAKE_UNSTAKE_SUCCESS","STAKE_UNSTAKE_SUCCESS_RESET","REMOVE_LIQUIDITY_SUCCESS","REMOVE_LIQUIDITY_SUCCESS_RESET","initialState","account","web3","blockchainClient","myData","ixfiStat","loading","tokensBalance","swapSuccess","addLiquiditySuccess","stakeUnStakeSuccess","removeLiquiditySuccess","rootReducer","state","action","type","Object","assign","payload"],"mappings":"AAAA,SACEA,cADF,EAEEC,WAFF,EAGEC,4BAHF,EAIEC,YAJF,EAKEC,kBALF,EAMEC,qBANF,EAOEC,2BAPF,EAQEC,qBARF,EASEC,2BATF,EAUEC,wBAVF,EAWEC,8BAXF,QAYO,2BAZP;AAcA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,IADU;AAEnBC,EAAAA,IAAI,EAAE,IAFa;AAGnBC,EAAAA,gBAAgB,EAAE,IAHC;AAInBC,EAAAA,MAAM,EAAE,EAJW;AAKnBC,EAAAA,QAAQ,EAAE,EALS;AAMnBC,EAAAA,OAAO,EAAE,IANU;AAOnBC,EAAAA,aAAa,EAAE,EAPI;AAQnBC,EAAAA,WAAW,EAAE,KARM;AASnBC,EAAAA,mBAAmB,EAAE,KATF;AAUnBC,EAAAA,mBAAmB,EAAE,KAVF;AAWnBC,EAAAA,sBAAsB,EAAE;AAXL,CAArB;;AAcA,SAASC,WAAT,CAAqBC,KAAK,GAAGb,YAA7B,EAA2Cc,MAA3C,EAAmD;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK1B,cAAL;AACE,aAAO2B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BZ,QAAAA,OAAO,EAAEa,MAAM,CAACI;AADc,OAAzB,CAAP;;AAGF,SAAK5B,WAAL;AACE,aAAO0B,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BX,QAAAA,IAAI,EAAEY,MAAM,CAACI;AADiB,OAAzB,CAAP;;AAGF,SAAK3B,4BAAL;AACE,aAAOyB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BZ,QAAAA,OAAO,EAAE;AADqB,OAAzB,CAAP;;AAGF,SAAKT,YAAL;AACE,aAAO,EACL,GAAGqB,KADE;AAELL,QAAAA,WAAW,EAAE;AAFR,OAAP;;AAIF,SAAKf,kBAAL;AACE,aAAO,EACL,GAAGoB,KADE;AAELL,QAAAA,WAAW,EAAE;AAFR,OAAP;;AAIF,SAAKd,qBAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELJ,QAAAA,mBAAmB,EAAE;AAFhB,OAAP;;AAIF,SAAKd,2BAAL;AACE,aAAO,EACL,GAAGkB,KADE;AAELJ,QAAAA,mBAAmB,EAAE;AAFhB,OAAP;;AAIF,SAAKb,qBAAL;AACE,aAAO,EACL,GAAGiB,KADE;AAELH,QAAAA,mBAAmB,EAAE;AAFhB,OAAP;;AAIF,SAAKb,2BAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELH,QAAAA,mBAAmB,EAAE;AAFhB,OAAP;;AAIF,SAAKZ,wBAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELF,QAAAA,sBAAsB,EAAE;AAFnB,OAAP;;AAIF,SAAKZ,8BAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELF,QAAAA,sBAAsB,EAAE;AAFnB,OAAP;;AAIF;AAAS;AACP,eAAOE,KAAP;AACD;AAvDH;AAyDD;;AAED,eAAeD,WAAf","sourcesContent":["import {\n  ACCOUNT_UPDATE,\n  WEB3_LOADED,\n  ACCOUNT_UPDATE_ON_DISCONNECT,\n  SWAP_SUCCESS,\n  SWAP_SUCCESS_RESET,\n  ADD_LIQUIDITY_SUCCESS,\n  ADD_LIQUIDITY_SUCCESS_RESET,\n  STAKE_UNSTAKE_SUCCESS,\n  STAKE_UNSTAKE_SUCCESS_RESET,\n  REMOVE_LIQUIDITY_SUCCESS,\n  REMOVE_LIQUIDITY_SUCCESS_RESET\n} from \"../constants/action-types\";\n\nconst initialState = {\n  account: null,\n  web3: null,\n  blockchainClient: null,\n  myData: {},\n  ixfiStat: [],\n  loading: true,\n  tokensBalance: [],\n  swapSuccess: false,\n  addLiquiditySuccess: false,\n  stakeUnStakeSuccess: false,\n  removeLiquiditySuccess: false\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACCOUNT_UPDATE:\n      return Object.assign({}, state, {\n        account: action.payload,\n      });\n    case WEB3_LOADED:\n      return Object.assign({}, state, {\n        web3: action.payload,\n      });\n    case ACCOUNT_UPDATE_ON_DISCONNECT:\n      return Object.assign({}, state, {\n        account: null,\n      });\n    case SWAP_SUCCESS:\n      return {\n        ...state,\n        swapSuccess: true,\n      };\n    case SWAP_SUCCESS_RESET:\n      return {\n        ...state,\n        swapSuccess: false,\n      };\n    case ADD_LIQUIDITY_SUCCESS:\n      return {\n        ...state,\n        addLiquiditySuccess: true,\n      };\n    case ADD_LIQUIDITY_SUCCESS_RESET:\n      return {\n        ...state,\n        addLiquiditySuccess: false,\n      };\n    case STAKE_UNSTAKE_SUCCESS:\n      return {\n        ...state,\n        stakeUnStakeSuccess: true,\n      };\n    case STAKE_UNSTAKE_SUCCESS_RESET:\n      return {\n        ...state,\n        stakeUnStakeSuccess: false,\n      };\n    case REMOVE_LIQUIDITY_SUCCESS:\n      return {\n        ...state,\n        removeLiquiditySuccess: true,\n      };\n    case REMOVE_LIQUIDITY_SUCCESS_RESET:\n      return {\n        ...state,\n        removeLiquiditySuccess: false,\n      };\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}