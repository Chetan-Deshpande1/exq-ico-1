{"ast":null,"code":"var _jsxFileName = \"/home/neha/exq-ico-1/src/components/Main/swap/swap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback } from \"react\";\nimport { Container, Row } from \"reactstrap\";\nimport { useState } from \"react\";\nimport \"./swap.scss\";\nimport { Card, Button, CardHeader, CardFooter, CardBody, CardTitle, CardText, Col, InputGroup, InputGroupAddon } from \"reactstrap\";\nimport { Icon, Input } from \"semantic-ui-react\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport { checkIfApproved, getTokenBalance, getEquivalentToken, getCurrId, generateRefLink, getCurrPrice, getEQXBalance, getCorrespondingEQX } from \"../../../helpers/getterFunctions\";\nimport { connect } from \"react-redux\";\nimport { approveTokens, buyToken } from \"../../../helpers/setterFunctions\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport AccountModal from \"../../header/Accountmodal\";\nimport { convertToInternationalCurrencySystem } from \"../../../helpers/numberFormatter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst options = [\"USDT\", \"BNB\", \"BTC\", \"ETH\", \"BUSD\"];\n\nconst Swap = props => {\n  _s();\n\n  const [inputAmount, setInputAmount] = useState(\"\");\n  const [outputAmount, setOutputAmount] = useState(\"\");\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [buttonName, setButtonName] = useState(\"BUY EQX\");\n  const [currTokenBal, setCurTokenBal] = useState(\"\");\n  const [refLink, setRefLink] = useState(\"\");\n  const [value, setValue] = useState({\n    \"value\": \"USDT\",\n    \"label\": \"USDT\"\n  });\n  const [ref, setRef] = useState(\"10000\");\n  const [transactionOnGoing, setTransactionOnGoing] = useState(false);\n  const [copySuccess, setCopySuccess] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [eqxBalance, setEqxBalance] = useState(\"\");\n  useEffect(() => {\n    (async () => {\n      await reset();\n      await getBalance();\n    })(); // getCorrespondingEQX(\"100\",\"eth\")\n\n  }, [value]);\n  useEffect(() => {\n    (async () => {\n      await getBalance();\n    })();\n  }, [props.account]);\n  useEffect(() => {\n    (async () => {\n      const queryParams = new URLSearchParams(window.location.search);\n      const id = queryParams.get(\"id\");\n      let currId = await getCurrId();\n      let price = await getCurrPrice();\n      setPrice(price);\n      console.log(\"id----------->\", id);\n\n      if (Number(currId) >= Number(id) && Number(id) > 10000) {\n        console.log(\"here I am\");\n        localStorage.setItem(\"ref\", id);\n        setRef(id);\n      }\n    })();\n  }, [props.account]); // useEffect(() => {\n  //   (async () => {\n  //     if (value && value.value) {\n  //       let amount = await getEquivalentToken(inputAmount, value.value.toLowerCase());\n  //       setOutputAmount(amount)\n  //     }\n  //   })()\n  // }, [inputAmount, value])\n\n  useEffect(() => {\n    (async () => {\n      if (props.account && props.account.account) {\n        let link = await generateRefLink(props.account.account);\n        console.log(\"ref------>\", link);\n        setRefLink(link);\n      }\n    })();\n  }, [props.account]);\n  useEffect(() => {\n    (async () => {\n      try {\n        if (!value) return;\n        if (value.value === \"BNB\") setButtonName(\"BUY TOKEN\");else {\n          let res = await checkAllowance();\n          console.log(\"res--------->\", res);\n          if (res === true) setButtonName(\"BUY TOKEN\");else setButtonName(\"APPROVE\");\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    })();\n  }, [value, props.account, inputAmount, transactionOnGoing]);\n  const handleOutputChange = useCallback(async e => {\n    e.preventDefault();\n    e.persist();\n    console.log(\"heeeee--------\");\n\n    if (value && value.value) {\n      let _input = await getCorrespondingEQX(e.target.value, value.value.toLowerCase());\n\n      setInputAmount(_input);\n    }\n  }, [value]); // useEffect(()=>{(async()=>{\n  //   if (value && value.value && outputAmount) {\n  //     let _input = await getCorrespondingEQX(outputAmount, value.value.toLowerCase())\n  //     setInputAmount(_input);\n  //   }\n  // })()\n  // },[outputAmount,value])\n  // useEffect(() => {\n  //   (async () => {\n  //     if (inputAmount && value && value.value) {\n  //       console.log(\"false-----\")\n  //       let _outputAmount = await getEquivalentToken(\n  //         inputAmount,\n  //         value.value\n  //       )\n  //       setOutputAmount(\n  //         _outputAmount\n  //       );\n  //       await getBalance();\n  //       await checkAllowance();\n  //     }\n  //   })()\n  // }, [inputAmount, value])\n\n  const handleSelect = useCallback(async e => {\n    try {\n      console.log(\"selected value is -----\", e);\n      setValue(e);\n\n      if (inputAmount) {\n        console.log(\"false-----\");\n\n        let _outputAmount = await getEquivalentToken(inputAmount, e.value);\n\n        setOutputAmount(_outputAmount);\n        await getBalance();\n        await checkAllowance();\n      } else {\n        console.log(\"true...\");\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [props.account, inputAmount]);\n\n  const getBalance = async () => {\n    try {\n      console.log(\"output dropdown\", typeof value.value);\n      let res;\n      let eqxBal;\n\n      if (value && value.value) {\n        if (props.account && props.account.account) {\n          res = await getTokenBalance(value.value.toLowerCase(), props.account.account);\n          eqxBal = await getTokenBalance(\"eqx\", props.account.account);\n        }\n\n        setCurTokenBal(res);\n        setEqxBalance(eqxBal);\n        console.log(\"res\", res);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const checkAllowance = async () => {\n    try {\n      if (value && value.value == \"BNB\") return;\n\n      if (props.account && props.account.account && value && outputAmount) {\n        let res = await checkIfApproved(outputAmount, value.value.toLowerCase(), props.account.account);\n        return res;\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const approveToken = async () => {\n    try {\n      if (props.account && props.account.account && value && inputAmount) {\n        setTransactionOnGoing(true);\n        setIsDisabled(true);\n        let res = await approveTokens(value.value.toLowerCase(), props.account.account);\n        setIsDisabled(false);\n\n        if (res.status == true) {\n          toast.success(\"Transaction successful\");\n        } else {\n          toast.error(\"Transaction Failed\");\n        }\n\n        setTransactionOnGoing(false);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const purchaseToken = async () => {\n    try {\n      if (props.account && props.account.account && value && inputAmount) {\n        setTransactionOnGoing(true);\n        setIsDisabled(true);\n\n        let _ref;\n\n        if (ref == \"\") {\n          _ref = 10000;\n          setRef(_ref);\n        } else _ref = ref;\n\n        console.log(\"buy--\", _ref);\n        let res = await buyToken(inputAmount, _ref, value.value.toLowerCase(), props.account.account);\n        setIsDisabled(false);\n\n        if (res.status == true) {\n          toast.success(\"Transaction successful\");\n        } else {\n          toast.error(\"Transaction Failed\");\n        }\n\n        await getBalance();\n        setTransactionOnGoing(false);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  function copyToClipboard(e) {\n    var textField = document.createElement(\"textarea\");\n    textField.innerText = refLink;\n    document.body.appendChild(textField);\n    textField.select();\n    document.execCommand(\"copy\");\n    textField.remove();\n    setCopySuccess(\"Copied!\");\n    toast.success(\"Referral Link Copied\");\n    console.log(\"refferal link is copied------->\", refLink);\n  }\n\n  async function reset() {\n    setInputAmount(null);\n    setOutputAmount(null);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"swap\",\n      fluid: \"true\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: \"swap__box\",\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"exchange\",\n              children: \"BUY EQX\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"exchange-title\",\n              children: \"Bye EQX Token In An Instant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            tag: \"h5\",\n            className: \"price-sec\",\n            children: [\"1 EQX = $ \", price ? price : 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"exchange-1\",\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                lg: 6,\n                className: \"ex-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                lg: 6,\n                className: \"ex-2\",\n                children: [\"Balance: \", eqxBalance ? convertToInternationalCurrencySystem(eqxBalance) : 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              lg: 12,\n              className: \"exchange-box\",\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                label: \"EQX\",\n                onChange: async e => {\n                  if (value && value.value) {\n                    setInputAmount(e.target.value);\n                    let output = await getEquivalentToken(e.target.value, value.value.toLowerCase());\n                    setOutputAmount(output);\n                  }\n                },\n                labelPosition: \"right\",\n                placeholder: \"0.0\",\n                className: \"token-1\",\n                value: inputAmount ? inputAmount : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"arrow down\",\n            className: \"exchange-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"exchange-1\",\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                lg: 6,\n                className: \"ex-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                lg: 6,\n                className: \"ex-2\",\n                children: [\"Balance: \", currTokenBal && currTokenBal ? convertToInternationalCurrencySystem(currTokenBal) : 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              lg: 12,\n              className: \"exchange-box\",\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                label: /*#__PURE__*/_jsxDEV(Dropdown, {\n                  defaultValue: \"BNB\",\n                  options: options,\n                  onChange: handleSelect,\n                  onClick: () => {\n                    reset();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 21\n                }, this),\n                value: outputAmount ? outputAmount : \"\",\n                onChange: async e => {\n                  setOutputAmount(e.target.value);\n                  await handleOutputChange(e);\n                },\n                labelPosition: \"right\",\n                placeholder: \"0.0\",\n                className: \"token-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"exchange-1 referrer\",\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Referred By\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              lg: 12,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: ref,\n                onChange: e => setRef(e.target.value),\n                className: \"ref-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"swap-btn\",\n            color: \"primary\",\n            size: \"lg\",\n            block: true,\n            onClick: () => {\n              buttonName == \"APPROVE\" ? approveToken() : purchaseToken();\n            },\n            children: buttonName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this), \"// : \", /*#__PURE__*/_jsxDEV(AccountModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 20\n          }, this), \"}\", /*#__PURE__*/_jsxDEV(Row, {\n            className: \"ref-copy\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"ref-link\",\n              children: \" Your Referral Link : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"ref-copy--btn\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                lg: 8,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  onChange: t => {\n                    copyToClipboard();\n                  },\n                  type: \"text\",\n                  name: \"amount\",\n                  id: \"amount\",\n                  value: refLink ? refLink : \"Bye EQX To Get Referral Bonus Link\",\n                  className: \"ref-input\",\n                  onClick: copyToClipboard\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                lg: 4\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"NOTE:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, this), \" Buy only at app.equinox.business and always ensure you are interacting with right contract address.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Swap, \"QCEf4jqe70+fxlXiWvFEAIeqiGI=\");\n\n_c = Swap;\n\nconst mapStateToProps = state => {\n  return {\n    account: state.account\n  };\n};\n\nexport default connect(mapStateToProps)(Swap);\n\nvar _c;\n\n$RefreshReg$(_c, \"Swap\");","map":{"version":3,"sources":["/home/neha/exq-ico-1/src/components/Main/swap/swap.js"],"names":["React","useEffect","useCallback","Container","Row","useState","Card","Button","CardHeader","CardFooter","CardBody","CardTitle","CardText","Col","InputGroup","InputGroupAddon","Icon","Input","Dropdown","checkIfApproved","getTokenBalance","getEquivalentToken","getCurrId","generateRefLink","getCurrPrice","getEQXBalance","getCorrespondingEQX","connect","approveTokens","buyToken","ToastContainer","toast","AccountModal","convertToInternationalCurrencySystem","options","Swap","props","inputAmount","setInputAmount","outputAmount","setOutputAmount","isDisabled","setIsDisabled","buttonName","setButtonName","currTokenBal","setCurTokenBal","refLink","setRefLink","value","setValue","ref","setRef","transactionOnGoing","setTransactionOnGoing","copySuccess","setCopySuccess","price","setPrice","eqxBalance","setEqxBalance","reset","getBalance","account","queryParams","URLSearchParams","window","location","search","id","get","currId","console","log","Number","localStorage","setItem","link","res","checkAllowance","e","handleOutputChange","preventDefault","persist","_input","target","toLowerCase","handleSelect","_outputAmount","eqxBal","approveToken","status","success","error","purchaseToken","_ref","copyToClipboard","textField","document","createElement","innerText","body","appendChild","select","execCommand","remove","output","t","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback } from \"react\";\nimport { Container, Row } from \"reactstrap\";\nimport { useState } from \"react\";\nimport \"./swap.scss\";\nimport {\n  Card,\n  Button,\n  CardHeader,\n  CardFooter,\n  CardBody,\n  CardTitle,\n  CardText,\n  Col,\n  InputGroup,\n  InputGroupAddon,\n} from \"reactstrap\";\nimport { Icon, Input } from \"semantic-ui-react\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport {\n  checkIfApproved,\n  getTokenBalance,\n  getEquivalentToken,\n  getCurrId,\n  generateRefLink,\n  getCurrPrice,\n  getEQXBalance,\n  getCorrespondingEQX,\n} from \"../../../helpers/getterFunctions\";\nimport { connect } from \"react-redux\";\nimport { approveTokens, buyToken } from \"../../../helpers/setterFunctions\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport AccountModal from \"../../header/Accountmodal\";\nimport { convertToInternationalCurrencySystem } from \"../../../helpers/numberFormatter\";\nconst options = [\"USDT\", \"BNB\", \"BTC\", \"ETH\", \"BUSD\"];\n\nconst Swap = (props) => {\n  const [inputAmount, setInputAmount] = useState(\"\");\n  const [outputAmount, setOutputAmount] = useState(\"\");\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [buttonName, setButtonName] = useState(\"BUY EQX\");\n  const [currTokenBal, setCurTokenBal] = useState(\"\");\n  const [refLink, setRefLink] = useState(\"\");\n  const [value, setValue] = useState({ \"value\": \"USDT\", \"label\": \"USDT\" });\n  const [ref, setRef] = useState(\"10000\");\n  const [transactionOnGoing, setTransactionOnGoing] = useState(false);\n  const [copySuccess, setCopySuccess] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [eqxBalance, setEqxBalance] = useState(\"\");\n\n\n  useEffect(() => {\n    (async () => {\n      await reset()\n      await getBalance()\n    })();\n\n    // getCorrespondingEQX(\"100\",\"eth\")\n  }, [value]);\n\n  useEffect(() => {\n    (async () => {\n      await getBalance()\n    })();\n\n  }, [props.account])\n\n  useEffect(() => {\n    (async () => {\n      const queryParams = new URLSearchParams(window.location.search);\n      const id = queryParams.get(\"id\");\n      let currId = await getCurrId();\n      let price = await getCurrPrice();\n      setPrice(price)\n      console.log(\"id----------->\", id);\n      if (Number(currId) >= Number(id) && Number(id) > 10000) {\n        console.log(\"here I am\");\n        localStorage.setItem(\"ref\", id);\n        setRef(id);\n      }\n\n    })();\n  }, [props.account]);\n\n  // useEffect(() => {\n  //   (async () => {\n  //     if (value && value.value) {\n  //       let amount = await getEquivalentToken(inputAmount, value.value.toLowerCase());\n  //       setOutputAmount(amount)\n  //     }\n  //   })()\n  // }, [inputAmount, value])\n\n  useEffect(() => {\n    (async () => {\n      if (props.account && props.account.account) {\n        let link = await generateRefLink(props.account.account);\n        console.log(\"ref------>\", link);\n        setRefLink(link);\n      }\n    })();\n  }, [props.account]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        if (!value)\n          return;\n        if (value.value === \"BNB\")\n          setButtonName(\"BUY TOKEN\");\n        else {\n          let res = await checkAllowance();\n          console.log(\"res--------->\", res);\n          if (res === true) setButtonName(\"BUY TOKEN\");\n          else setButtonName(\"APPROVE\");\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    })();\n\n  }, [value, props.account, inputAmount, transactionOnGoing]);\n\n  const handleOutputChange = useCallback(async (e) => {\n    e.preventDefault()\n    e.persist()\n    console.log(\"heeeee--------\")\n    if (value && value.value) {\n      let _input = await getCorrespondingEQX(e.target.value, value.value.toLowerCase())\n      setInputAmount(_input);\n    }\n\n  }, [value])\n\n  // useEffect(()=>{(async()=>{\n  //   if (value && value.value && outputAmount) {\n\n  //     let _input = await getCorrespondingEQX(outputAmount, value.value.toLowerCase())\n  //     setInputAmount(_input);\n  //   }\n  // })()\n\n  // },[outputAmount,value])\n\n  // useEffect(() => {\n  //   (async () => {\n  //     if (inputAmount && value && value.value) {\n  //       console.log(\"false-----\")\n  //       let _outputAmount = await getEquivalentToken(\n  //         inputAmount,\n  //         value.value\n  //       )\n  //       setOutputAmount(\n  //         _outputAmount\n  //       );\n  //       await getBalance();\n  //       await checkAllowance();\n  //     }\n  //   })()\n  // }, [inputAmount, value])\n\n  const handleSelect = useCallback(async (e) => {\n    try {\n      console.log(\"selected value is -----\", e);\n      setValue(e);\n      if (inputAmount) {\n        console.log(\"false-----\")\n        let _outputAmount = await getEquivalentToken(\n          inputAmount,\n          e.value\n        )\n        setOutputAmount(\n          _outputAmount\n        );\n        await getBalance();\n        await checkAllowance();\n      }\n      else {\n        console.log(\"true...\")\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [props.account, inputAmount]);\n\n  const getBalance = async () => {\n    try {\n      console.log(\"output dropdown\", typeof value.value);\n      let res;\n      let eqxBal;\n      if (value && value.value) {\n        if (props.account && props.account.account) {\n          res = await getTokenBalance(\n            value.value.toLowerCase(),\n            props.account.account\n          );\n          eqxBal = await getTokenBalance(\"eqx\", props.account.account)\n        }\n        setCurTokenBal(res);\n        setEqxBalance(eqxBal);\n        console.log(\"res\", res);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const checkAllowance = async () => {\n    try {\n      if (value && value.value == \"BNB\") return;\n      if (props.account && props.account.account && value && outputAmount) {\n        let res = await checkIfApproved(\n          outputAmount,\n          value.value.toLowerCase(),\n          props.account.account\n        );\n        return res;\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const approveToken = async () => {\n    try {\n      if (props.account && props.account.account && value && inputAmount) {\n        setTransactionOnGoing(true);\n        setIsDisabled(true);\n        let res = await approveTokens(\n          value.value.toLowerCase(),\n          props.account.account\n        );\n\n        setIsDisabled(false);\n        if (res.status == true) {\n          toast.success(\"Transaction successful\")\n        } else {\n          toast.error(\"Transaction Failed\");\n        }\n        setTransactionOnGoing(false);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const purchaseToken = async () => {\n    try {\n      if (props.account && props.account.account && value && inputAmount) {\n        setTransactionOnGoing(true)\n        setIsDisabled(true);\n        let _ref;\n        if (ref == \"\") {\n          _ref = 10000;\n          setRef(_ref)\n        }\n        else\n          _ref = ref;\n        console.log(\"buy--\", _ref)\n        let res = await buyToken(\n\n          inputAmount,\n          _ref,\n          value.value.toLowerCase(),\n          props.account.account\n        );\n\n        setIsDisabled(false);\n        if (res.status == true) {\n          toast.success(\"Transaction successful\");\n        } else {\n          toast.error(\"Transaction Failed\");\n        }\n        await getBalance()\n        setTransactionOnGoing(false);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  function copyToClipboard(e) {\n    var textField = document.createElement(\"textarea\");\n    textField.innerText = refLink;\n    document.body.appendChild(textField);\n    textField.select();\n    document.execCommand(\"copy\");\n    textField.remove();\n\n    setCopySuccess(\"Copied!\");\n    toast.success(\"Referral Link Copied\");\n    console.log(\"refferal link is copied------->\", refLink);\n  }\n\n  async function reset() {\n    setInputAmount(null)\n    setOutputAmount(null)\n  }\n\n\n  return (\n    <>\n      <Container className=\"swap\" fluid=\"true\">\n        <Card className=\"swap__box\">\n          <CardHeader>\n            <Col>\n              <h2 className=\"exchange\">BUY EQX</h2>\n              <h6 className=\"exchange-title\">Bye EQX Token In An Instant</h6>\n            </Col>\n          </CardHeader>\n          <CardBody>\n            <CardTitle tag=\"h5\" className=\"price-sec\">1 EQX = $ {price ? price : 0}</CardTitle>\n            <Row className=\"exchange-1\">\n              <Row>\n                <Col lg={6} className=\"ex-1\">\n                  {/* From */}\n                </Col>\n                <Col lg={6} className=\"ex-2\">\n                  Balance: {eqxBalance ? convertToInternationalCurrencySystem(eqxBalance) : 0}\n                </Col>\n              </Row>\n              <Col lg={12} className=\"exchange-box\">\n                <Input\n                  label={\"EQX\"}\n                  onChange={async (e) => {\n                    if (value && value.value) {\n                      setInputAmount(e.target.value);\n\n                      let output = await getEquivalentToken(\n                        e.target.value,\n                        value.value.toLowerCase()\n                      )\n                      setOutputAmount(\n                        output\n                      );\n                    }\n\n                  }}\n                  labelPosition=\"right\"\n                  placeholder=\"0.0\"\n                  className=\"token-1\"\n                  value={inputAmount ? inputAmount : \"\"}\n                />\n              </Col>\n            </Row>\n            <Icon name=\"arrow down\" className=\"exchange-icon\" />\n            <Row className=\"exchange-1\">\n              <Row>\n                <Col lg={6} className=\"ex-1\">\n                  {/* To */}\n                </Col>\n                <Col lg={6} className=\"ex-2\">\n                  Balance: {currTokenBal && currTokenBal ? convertToInternationalCurrencySystem(currTokenBal) : 0}\n                </Col>\n              </Row>\n              <Col lg={12} className=\"exchange-box\">\n                <Input\n                  label={\n                    <Dropdown\n                      defaultValue=\"BNB\"\n                      options={options}\n                      onChange={handleSelect}\n                      onClick={() => { reset() }}\n                    />\n                  }\n                  value={outputAmount ? outputAmount : \"\"}\n                  onChange={async (e) => {\n                    setOutputAmount(e.target.value)\n                    await handleOutputChange(e)\n                  }\n                  }\n                  labelPosition=\"right\"\n                  placeholder=\"0.0\"\n                  className=\"token-1\"\n                />\n              </Col>\n            </Row>\n            <Row className=\"exchange-1 referrer\">\n              <Row>\n                <h5>Referred By</h5>\n              </Row>\n              <Col lg={12}>\n                <input\n                  type=\"text\"\n                  value={ref}\n                  onChange={(e) => setRef(e.target.value)}\n                  className=\"ref-input\"\n                />\n              </Col>\n            </Row>\n            {/* {props.account ? */}\n              <Button\n                className=\"swap-btn\"\n                color=\"primary\"\n                size=\"lg\"\n                block\n                onClick={() => {\n                  buttonName == \"APPROVE\" ? approveToken() : purchaseToken();\n                }}\n              >\n                {buttonName}\n              </Button>\n\n              // : <AccountModal />}\n\n            <Row className=\"ref-copy\">\n              <h4 className=\"ref-link\"> Your Referral Link : </h4>\n              <Row className=\"ref-copy--btn\">\n                <Col lg={8}>\n                  <Input\n                    onChange={(t) => {\n                      copyToClipboard();\n                    }}\n                    type=\"text\"\n                    name=\"amount\"\n                    id=\"amount\"\n                    value={refLink ? refLink : \"Bye EQX To Get Referral Bonus Link\"}\n                    className=\"ref-input\"\n                    onClick={copyToClipboard}\n                  />\n                </Col>\n                <Col lg={4}>\n\n                  {/* <Button\n                    className=\"swap-btn\"\n                    onClick={() => {\n                      copyToClipboard();\n                    }}\n                  >\n                    COPY\n                  </Button> */}\n                </Col>\n              </Row>\n            </Row>\n          </CardBody>\n          <CardFooter>\n            <b>NOTE:</b> Buy only at app.equinox.business and always ensure you are interacting with right contract address.\n          </CardFooter>\n        </Card>\n        <ToastContainer />\n      </Container>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    account: state.account,\n  };\n};\n\nexport default connect(mapStateToProps)(Swap);\n"]},"metadata":{},"sourceType":"module"}