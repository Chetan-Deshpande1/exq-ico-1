[{"/home/neha/exq-ico-1/src/index.tsx":"1","/home/neha/exq-ico-1/src/components/pages/main.js":"2","/home/neha/exq-ico-1/src/components/pages/Home.tsx":"3","/home/neha/exq-ico-1/src/components/pages/Dashboard.tsx":"4","/home/neha/exq-ico-1/src/components/pages/Dex.tsx":"5","/home/neha/exq-ico-1/src/helpers/getterFunctions.js":"6","/home/neha/exq-ico-1/src/redux/store/index.js":"7","/home/neha/exq-ico-1/src/components/Main/swap/swap.js":"8","/home/neha/exq-ico-1/src/components/pages/GeneralNav.tsx":"9","/home/neha/exq-ico-1/src/components/Footer/index.tsx":"10","/home/neha/exq-ico-1/src/components/pages/Home1.tsx":"11","/home/neha/exq-ico-1/src/helpers/addressHelper.js":"12","/home/neha/exq-ico-1/src/helpers/currentWalletHelper.js":"13","/home/neha/exq-ico-1/src/Config/contracts.js":"14","/home/neha/exq-ico-1/src/helpers/setterFunctions.js":"15","/home/neha/exq-ico-1/src/helpers/numberFormatter.js":"16","/home/neha/exq-ico-1/src/components/header/index.js":"17","/home/neha/exq-ico-1/src/components/header/Accountmodal.js":"18","/home/neha/exq-ico-1/src/redux/reducers/index.js":"19","/home/neha/exq-ico-1/src/components/header/wrongNetworkModal.js":"20","/home/neha/exq-ico-1/src/redux/constants/action-types.js":"21","/home/neha/exq-ico-1/src/redux/actions/index.js":"22"},{"size":1265,"mtime":1633704482514,"results":"23","hashOfConfig":"24"},{"size":399,"mtime":1633704482514,"results":"25","hashOfConfig":"24"},{"size":512,"mtime":1633704482398,"results":"26","hashOfConfig":"24"},{"size":1408,"mtime":1633704482394,"results":"27","hashOfConfig":"24"},{"size":1734,"mtime":1633704482394,"results":"28","hashOfConfig":"24"},{"size":4932,"mtime":1633707305075,"results":"29","hashOfConfig":"24"},{"size":390,"mtime":1633704482514,"results":"30","hashOfConfig":"24"},{"size":12934,"mtime":1633712892203,"results":"31","hashOfConfig":"24"},{"size":6889,"mtime":1633711686551,"results":"32","hashOfConfig":"24"},{"size":4659,"mtime":1633704482390,"results":"33","hashOfConfig":"24"},{"size":4342,"mtime":1633704482398,"results":"34","hashOfConfig":"24"},{"size":222,"mtime":1633707305075,"results":"35","hashOfConfig":"24"},{"size":858,"mtime":1633707305075,"results":"36","hashOfConfig":"24"},{"size":819,"mtime":1633785716202,"results":"37","hashOfConfig":"24"},{"size":1469,"mtime":1633707305079,"results":"38","hashOfConfig":"24"},{"size":455,"mtime":1633707305075,"results":"39","hashOfConfig":"24"},{"size":823,"mtime":1633704482394,"results":"40","hashOfConfig":"24"},{"size":8985,"mtime":1633711562299,"results":"41","hashOfConfig":"24"},{"size":1942,"mtime":1633704482514,"results":"42","hashOfConfig":"24"},{"size":1047,"mtime":1633704482394,"results":"43","hashOfConfig":"24"},{"size":919,"mtime":1633704482514,"results":"44","hashOfConfig":"24"},{"size":1337,"mtime":1633704482514,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},"fsukg5",{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"49"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"53"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"/home/neha/exq-ico-1/src/index.tsx",["103","104"],"import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n//import { Dapp } from \"./components/Dapp\";\nimport GeneralNav from \"./components/pages/GeneralNav\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Home from \"./components/pages/Home\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"./components/pages/Dashboard\";\nimport Dex from \"./components/pages/Dex\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport Main from \"./components/pages/main\";\n\n// This is the entry point of application, but it just renders the Dapp\n// react component. All of the logic is contained in it.\n\nReactDOM.render(\n  <div>\n    <Provider store={store}>\n      <React.StrictMode>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n            <Route exact path=\"/main\">\n              <Main />\n            </Route>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/dex\">\n              <Dex />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </React.StrictMode>\n    </Provider>\n  </div>,\n  document.getElementById(\"root\")\n);\n",["105","106"],"/home/neha/exq-ico-1/src/components/pages/main.js",["107","108"],"import React from \"react\";\n//import Home from \"../home\";\nimport Swap from \"../Main/swap/swap\";\nimport Header from '../header'\nimport { getTokenContract } from \"../../helpers/getterFunctions\";\nimport Footer from \"../Footer/index\";\nimport GeneralNav from \"./GeneralNav\";\n\nconst Main = () => {\n  return (\n    <>\n      <GeneralNav />\n      <Swap />\n      <Footer />\n    </>\n  );\n};\nexport default Main;\n",["109","110"],"/home/neha/exq-ico-1/src/components/pages/Home.tsx",["111","112","113","114","115"],"import React from \"react\";\nimport GeneralNav from \"./GeneralNav\";\nimport ToggleButton from \"../ToggleButton/index\";\nimport CardContainer from \"../CardContainer/index\";\nimport Footer from \"../Footer/index\";\nimport Main from \"./main\";\nimport { Row, Col } from \"reactstrap\";\n\nimport Home1 from \"./Home1\";\n\nexport const Home = (props: any) => {\n  return (\n    <div className=\"main-container-home\">\n      <GeneralNav />\n      <Home1 />\n      {/* <Main /> */}\n      <Footer />\n    </div>\n  );\n};\n\nexport default Home;\n","/home/neha/exq-ico-1/src/components/pages/Dashboard.tsx",[],"/home/neha/exq-ico-1/src/components/pages/Dex.tsx",[],"/home/neha/exq-ico-1/src/helpers/getterFunctions.js",["116","117","118","119"],"import bep20Abi from './../Config/abis/bep20Abi.json';\nimport crowdsaleAbi from './../Config/abis/crowdsaleAbi.json'\nimport { getAddress } from './addressHelper';\nimport { getAccount, getUserBalance, getWeb3 } from './currentWalletHelper';\nimport contracts from './../Config/contracts'\n\n\nexport const getCrowdsaleContract = async () => {\n    try {\n        let web3 = await getWeb3();\n        console.log(\"here\", web3);\n        let crowdsale = await new web3.eth.Contract(crowdsaleAbi, await getAddress(contracts.crowdsale));\n        console.log(\"crowdsale\", crowdsale)\n        return crowdsale;\n    }\n    catch (e) {\n        console.log(e)\n    }\n\n}\n\nexport const getTokenContract = async (tokenName) => {\n    try {\n        let web3 = await getWeb3();\n        let token = await new web3.eth.Contract(bep20Abi, await getAddress(contracts[tokenName]));\n        console.log(\"token\", token)\n        return token;\n    }\n    catch (e) {\n        console.log(e)\n    }\n\n}\nexport const getAllowance = async (tokenName, account) => {\n    try {\n        let web3 = await getWeb3();\n        let token = await getTokenContract(tokenName);\n        let crowdsaleAddress = await getAddress(contracts.crowdsale)\n        let allowance = await token.methods.allowance(account, crowdsaleAddress).call()\n        console.log(\"allowance\", await web3.utils.fromWei(allowance.toString(), \"ether\"));\n        return await web3.utils.fromWei(allowance.toString(), \"ether\")\n    }\n    catch (e) {\n        console.log(e)\n    }\n\n}\n\nexport const getTokenBalance = async (tokenName, account) => {\n    try {\n\n        let web3 = await getWeb3();\n        let token = await getTokenContract(tokenName);\n        let balance\n        if (tokenName == \"bnb\") {\n            balance = await getUserBalance();\n        }\n        else\n            balance = await token.methods.balanceOf(account).call()\n        console.log(\"balance\", await web3.utils.fromWei(balance.toString(), \"ether\"));\n        return await web3.utils.fromWei(balance.toString(), \"ether\")\n    }\n    catch (e) {\n        console.log(e)\n    }\n\n}\n\nexport const getEquivalentToken = async (tokenToPurchase, tokenName) => {\n    try {\n        let web3 = await getWeb3();\n        let contract = await getCrowdsaleContract()\n        tokenToPurchase = await web3.utils.toWei(tokenToPurchase.toString())\n        console.log(\"token to purchase\", tokenToPurchase)\n        let amount = await contract.methods.amountNeedsToBePaid(tokenToPurchase, contracts[tokenName].type).call();\n        console.log(\"amount1\", amount.toString())\n        console.log(\"amount\", await web3.utils.fromWei(amount, \"ether\"));\n        return (await web3.utils.fromWei(amount, \"ether\")).toString();\n    }\n    catch (e) {\n        console.log(e)\n    }\n\n}\n\nexport const checkIfApproved = async (inputAmount, tokenName, account) => {\n    try {\n        let allowance = await getAllowance(tokenName, account);\n        console.log(\"allowances\", inputAmount, allowance)\n        if (Number(allowance) < Number(inputAmount)) {\n            console.log(\"false\")\n            return false;\n        }\n\n        else {\n            console.log(\"true\")\n            return true;\n        }\n    }\n    catch (e) {\n        console.log(e)\n    }\n\n}\n\nexport const isUserHaveId = async (account) => {\n    try {\n        let web3 = await getWeb3();\n        let contract = await getCrowdsaleContract()\n        let id = await contract.methods.usersId(account).call();\n        // console.log(\"id-------->\", id)\n        return id.toString();\n    }\n    catch (e) {\n        console.log(e)\n    }\n}\n\nexport const generateRefLink = async (account) => {\n    let link;\n    let id = await isUserHaveId(account);\n    if (Number(id) < 10000) {\n        return \"\"\n    }\n    link = process.env.REACT_APP_URL + \"?id=\" + id;\n    return link\n    // console.log(\"ref-link\", link,process.env.REACT_APP_URL)\n}\n\nexport const getCorrespondingEQX = async(amount,tokenName)=>{\n    try {\n        let web3 = await getWeb3();\n        let contract = await getCrowdsaleContract()\n        amount = await web3.utils.toWei(amount.toString())\n        \n        let receivingEQX = await contract.methods.getCorrespondingTokens(amount,contracts[tokenName].type).call();\n        console.log(\"receivingEQX-------->\", receivingEQX)\n        return (await web3.utils.fromWei(receivingEQX, \"ether\")).toString();\n    \n    }\n    catch (e) {\n        console.log(e)\n    }\n}\n\nexport const getCurrId = async () => {\n    try {\n        let web3 = await getWeb3();\n        let contract = await getCrowdsaleContract()\n        let id = await contract.methods.currId().call();\n        console.log(\"currid-------->\", id)\n        return id.toString();\n    }\n    catch (e) {\n        console.log(e)\n    }\n}\n\nexport const getCurrPrice = async () => {\n    let contract = await getCrowdsaleContract()\n    let price = await contract.methods.price().call();\n    console.log(\"price-------->\", price / 1e8)\n    return (price / 1e8).toString();\n}\n\n","/home/neha/exq-ico-1/src/redux/store/index.js",[],"/home/neha/exq-ico-1/src/components/Main/swap/swap.js",["120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135"],"import React, { useEffect, useCallback } from \"react\";\nimport { Container, Row } from \"reactstrap\";\nimport { useState } from \"react\";\nimport \"./swap.scss\";\nimport {\n  Card,\n  Button,\n  CardHeader,\n  CardFooter,\n  CardBody,\n  CardTitle,\n  CardText,\n  Col,\n  InputGroup,\n  InputGroupAddon,\n} from \"reactstrap\";\nimport { Icon, Input } from \"semantic-ui-react\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport {\n  checkIfApproved,\n  getTokenBalance,\n  getEquivalentToken,\n  getCurrId,\n  generateRefLink,\n  getCurrPrice,\n  getEQXBalance,\n  getCorrespondingEQX,\n} from \"../../../helpers/getterFunctions\";\nimport { connect } from \"react-redux\";\nimport { approveTokens, buyToken } from \"../../../helpers/setterFunctions\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport AccountModal from \"../../header/Accountmodal\";\nimport { convertToInternationalCurrencySystem } from \"../../../helpers/numberFormatter\";\nconst options = [\"USDT\", \"BNB\", \"BTC\", \"ETH\", \"BUSD\"];\n\nconst Swap = (props) => {\n  const [inputAmount, setInputAmount] = useState(\"\");\n  const [outputAmount, setOutputAmount] = useState(\"\");\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [buttonName, setButtonName] = useState(\"BUY EQX\");\n  const [currTokenBal, setCurTokenBal] = useState(\"\");\n  const [refLink, setRefLink] = useState(\"\");\n  const [value, setValue] = useState({ \"value\": \"USDT\", \"label\": \"USDT\" });\n  const [ref, setRef] = useState(\"10000\");\n  const [transactionOnGoing, setTransactionOnGoing] = useState(false);\n  const [copySuccess, setCopySuccess] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [eqxBalance, setEqxBalance] = useState(\"\");\n\n\n  useEffect(() => {\n    (async () => {\n      await reset()\n      await getBalance()\n    })();\n\n    // getCorrespondingEQX(\"100\",\"eth\")\n  }, [value]);\n\n  useEffect(() => {\n    (async () => {\n      await getBalance()\n    })();\n\n  }, [props.account])\n\n  useEffect(() => {\n    (async () => {\n      const queryParams = new URLSearchParams(window.location.search);\n      const id = queryParams.get(\"id\");\n      let currId = await getCurrId();\n      let price = await getCurrPrice();\n      setPrice(price)\n      console.log(\"id----------->\", id);\n      if (Number(currId) >= Number(id) && Number(id) > 10000) {\n        console.log(\"here I am\");\n        localStorage.setItem(\"ref\", id);\n        setRef(id);\n      }\n\n    })();\n  }, [props.account]);\n\n  // useEffect(() => {\n  //   (async () => {\n  //     if (value && value.value) {\n  //       let amount = await getEquivalentToken(inputAmount, value.value.toLowerCase());\n  //       setOutputAmount(amount)\n  //     }\n  //   })()\n  // }, [inputAmount, value])\n\n  useEffect(() => {\n    (async () => {\n      if (props.account && props.account.account) {\n        let link = await generateRefLink(props.account.account);\n        console.log(\"ref------>\", link);\n        setRefLink(link);\n      }\n    })();\n  }, [props.account]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        if (!value)\n          return;\n        if (value.value === \"BNB\")\n          setButtonName(\"BUY TOKEN\");\n        else {\n          let res = await checkAllowance();\n          console.log(\"res--------->\", res);\n          if (res === true) setButtonName(\"BUY TOKEN\");\n          else setButtonName(\"APPROVE\");\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    })();\n\n  }, [value, props.account, inputAmount, transactionOnGoing]);\n\n  const handleOutputChange = useCallback(async (e) => {\n    e.preventDefault()\n    e.persist()\n    console.log(\"heeeee--------\")\n    if (value && value.value) {\n      let _input = await getCorrespondingEQX(e.target.value, value.value.toLowerCase())\n      setInputAmount(_input);\n    }\n\n  }, [value])\n\n  // useEffect(()=>{(async()=>{\n  //   if (value && value.value && outputAmount) {\n\n  //     let _input = await getCorrespondingEQX(outputAmount, value.value.toLowerCase())\n  //     setInputAmount(_input);\n  //   }\n  // })()\n\n  // },[outputAmount,value])\n\n  // useEffect(() => {\n  //   (async () => {\n  //     if (inputAmount && value && value.value) {\n  //       console.log(\"false-----\")\n  //       let _outputAmount = await getEquivalentToken(\n  //         inputAmount,\n  //         value.value\n  //       )\n  //       setOutputAmount(\n  //         _outputAmount\n  //       );\n  //       await getBalance();\n  //       await checkAllowance();\n  //     }\n  //   })()\n  // }, [inputAmount, value])\n\n  const handleSelect = useCallback(async (e) => {\n    try {\n      console.log(\"selected value is -----\", e);\n      setValue(e);\n      if (inputAmount) {\n        console.log(\"false-----\")\n        let _outputAmount = await getEquivalentToken(\n          inputAmount,\n          e.value\n        )\n        setOutputAmount(\n          _outputAmount\n        );\n        await getBalance();\n        await checkAllowance();\n      }\n      else {\n        console.log(\"true...\")\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, [props.account, inputAmount]);\n\n  const getBalance = async () => {\n    try {\n      console.log(\"output dropdown\", typeof value.value);\n      let res;\n      let eqxBal;\n      if (value && value.value) {\n        if (props.account && props.account.account) {\n          res = await getTokenBalance(\n            value.value.toLowerCase(),\n            props.account.account\n          );\n          eqxBal = await getTokenBalance(\"eqx\", props.account.account)\n        }\n        setCurTokenBal(res);\n        setEqxBalance(eqxBal);\n        console.log(\"res\", res);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const checkAllowance = async () => {\n    try {\n      if (value && value.value == \"BNB\") return;\n      if (props.account && props.account.account && value && outputAmount) {\n        let res = await checkIfApproved(\n          outputAmount,\n          value.value.toLowerCase(),\n          props.account.account\n        );\n        return res;\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const approveToken = async () => {\n    try {\n      if (props.account && props.account.account && value && inputAmount) {\n        setTransactionOnGoing(true);\n        setIsDisabled(true);\n        let res = await approveTokens(\n          value.value.toLowerCase(),\n          props.account.account\n        );\n\n        setIsDisabled(false);\n        if (res.status == true) {\n          toast.success(\"Transaction successful\")\n        } else {\n          toast.error(\"Transaction Failed\");\n        }\n        setTransactionOnGoing(false);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const purchaseToken = async () => {\n    try {\n      if (props.account && props.account.account && value && inputAmount) {\n        setTransactionOnGoing(true)\n        setIsDisabled(true);\n        let _ref;\n        if (ref == \"\") {\n          _ref = 10000;\n          setRef(_ref)\n        }\n        else\n          _ref = ref;\n        console.log(\"buy--\", _ref)\n        let res = await buyToken(\n\n          inputAmount,\n          _ref,\n          value.value.toLowerCase(),\n          props.account.account\n        );\n\n        setIsDisabled(false);\n        if (res.status == true) {\n          toast.success(\"Transaction successful\");\n        } else {\n          toast.error(\"Transaction Failed\");\n        }\n        await getBalance()\n        setTransactionOnGoing(false);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  function copyToClipboard(e) {\n    if (!refLink)\n      return;\n    var textField = document.createElement(\"textarea\");\n    textField.innerText = refLink;\n    document.body.appendChild(textField);\n    textField.select();\n    document.execCommand(\"copy\");\n    textField.remove();\n\n    setCopySuccess(\"Copied!\");\n    toast.success(\"Referral Link Copied\");\n    console.log(\"refferal link is copied------->\", refLink);\n  }\n\n  async function reset() {\n    setInputAmount(null)\n    setOutputAmount(null)\n  }\n\n\n  return (\n    <>\n      <Container className=\"swap\" fluid=\"true\">\n        <Card className=\"swap__box\">\n          <CardHeader>\n            <Col>\n              <h2 className=\"exchange\">BUY EQX</h2>\n              <h6 className=\"exchange-title\">Bye EQX Token In An Instant</h6>\n            </Col>\n          </CardHeader>\n          <CardBody>\n            <CardTitle tag=\"h5\" className=\"price-sec\">1 EQX = $ {price ? price : 0}</CardTitle>\n            <Row className=\"exchange-1\">\n              <Row>\n                <Col lg={6} className=\"ex-1\">\n                  {/* From */}\n                </Col>\n                <Col lg={6} className=\"ex-2\">\n                  Balance: {eqxBalance ? convertToInternationalCurrencySystem(eqxBalance) : 0}\n                </Col>\n              </Row>\n              <Col lg={12} className=\"exchange-box\">\n                <Input\n                  label={\"EQX\"}\n                  onChange={async (e) => {\n                    if (value && value.value) {\n                      setInputAmount(e.target.value);\n\n                      let output = await getEquivalentToken(\n                        e.target.value,\n                        value.value.toLowerCase()\n                      )\n                      setOutputAmount(\n                        output\n                      );\n                    }\n\n                  }}\n                  labelPosition=\"right\"\n                  placeholder=\"0.0\"\n                  className=\"token-1\"\n                  value={inputAmount ? inputAmount : \"\"}\n                />\n              </Col>\n            </Row>\n            <Icon name=\"arrow down\" className=\"exchange-icon\" />\n            <Row className=\"exchange-1\">\n              <Row>\n                <Col lg={6} className=\"ex-1\">\n                  {/* To */}\n                </Col>\n                <Col lg={6} className=\"ex-2\">\n                  Balance: {currTokenBal && currTokenBal ? convertToInternationalCurrencySystem(currTokenBal) : 0}\n                </Col>\n              </Row>\n              <Col lg={12} className=\"exchange-box\">\n                <Input\n                  label={\n                    <Dropdown\n                      defaultValue=\"USDT\"\n                      value=\"USDT\"\n                      options={options}\n                      onChange={handleSelect}\n                      onClick={() => { reset() }}\n                    />\n                  }\n                  value={outputAmount ? outputAmount : \"\"}\n                  onChange={async (e) => {\n                    setOutputAmount(e.target.value)\n                    await handleOutputChange(e)\n                  }\n                  }\n                  labelPosition=\"right\"\n                  placeholder=\"0.0\"\n                  className=\"token-1\"\n                />\n              </Col>\n            </Row>\n            <Row className=\"exchange-1 referrer\">\n              <Row>\n                <h5>Referred By</h5>\n              </Row>\n              <Col lg={12}>\n                <input\n                  type=\"text\"\n                  value={ref}\n                  onChange={(e) => setRef(e.target.value)}\n                  className=\"ref-input\"\n                />\n              </Col>\n            </Row>\n            <Button\n              href=\"#connect\"\n              className=\"swap-btn\"\n              color=\"primary\"\n              size=\"lg\"\n              block\n              onClick={() => {\n                buttonName == \"APPROVE\" ? approveToken() : purchaseToken();\n              }}\n            >\n              {props.account ? buttonName : \"You are off chain\"}\n            </Button>\n\n\n            <Row className=\"ref-copy\">\n              <h4 className=\"ref-link\"> Your Referral Link : </h4>\n              <Row className=\"ref-copy--btn\">\n                <Col lg={8}>\n                  <Input\n                    onChange={(t) => {\n                      copyToClipboard();\n                    }}\n                    type=\"text\"\n                    name=\"amount\"\n                    id=\"amount\"\n                    value={refLink ? refLink : \"Buy EQX To Get Referral Bonus Link\"}\n                    className=\"ref-input\"\n                    onClick={copyToClipboard}\n                  />\n                </Col>\n                <Col lg={4}>\n                  {/* <Button\n                    className=\"swap-btn\"\n                    onClick={() => {\n                      copyToClipboard();\n                    }}\n                  >\n                    COPY\n                  </Button> */}\n                </Col>\n              </Row>\n            </Row>\n          </CardBody>\n          <CardFooter>\n            <b>NOTE:</b> Buy only at app.equinox.business and always ensure you are interacting with right contract address.\n          </CardFooter>\n        </Card>\n        <ToastContainer />\n      </Container>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    account: state.account,\n  };\n};\n\nexport default connect(mapStateToProps)(Swap);\n","/home/neha/exq-ico-1/src/components/pages/GeneralNav.tsx",["136","137","138","139","140","141","142","143","144"],"import { useState } from \"react\";\nimport { Disclosure } from \"@headlessui/react\";\nimport { BellIcon, MenuIcon, XIcon } from \"@heroicons/react/outline\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\n\nimport \"./style.css\";\nimport Accountmodal from \"../header/Accountmodal\";\n\nfunction classNames(...classes: string[]) {\n  return classes.filter(Boolean).join(\" \");\n}\n\nexport default function GeneralNav() {\n  const [onBtnClass, setOnBtnClass] = useState(\n    \"inline-block chain font-11 shadow-md\"\n  );\n  const [offBtnClass, setOffBtnClass] = useState(\n    \"inline-block chain-disabled font-11\"\n  );\n  const [offChk, setOffChk] = useState(true);\n  const [onChk, setOnChk] = useState(false);\n\n  function offChain() {\n    setOffBtnClass(\"inline-block chain-disabled font-11\");\n    setOnBtnClass(\"inline-block chain font-11 shadow-md\");\n    setOffChk(false);\n    setOnChk(true);\n  }\n\n  function onChain() {\n    setOnBtnClass(\"inline-block chain-disabled font-11\");\n    setOffBtnClass(\"inline-block chain font-11 shadow-md\");\n    setOffChk(true);\n    setOnChk(false);\n  }\n  return (\n    <Disclosure as=\"nav\" className=\"bg-white \">\n      {({ open }) => (\n        <>\n          <div className=\"md:w-auto\">\n            <div className=\"flex justify-between \">\n              <div className=\"flex\">\n                <div className=\"-ml-2 mr-2 flex items-center md:hidden\">\n                  {/* Mobile menu button */}\n                  <Disclosure.Button className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n                    <span className=\"sr-only\">Open main menu</span>\n                    {open ? (\n                      <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                    ) : (\n                      <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                    )}\n                  </Disclosure.Button>\n                </div>\n                <div className=\"flex-shrink-0 flex items-start\">\n                  <img\n                    className=\"block lg:hidden logo-img \"\n                    src=\"https://eqx.equinox.business/images/logo2x.png\"\n                    alt=\"Equinox\"\n                  />\n                  <img\n                    className=\"hidden lg:block logo-img \"\n                    src=\"https://eqx.equinox.business/images/logo2x.png\"\n                    alt=\"Equinox\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex  align-middle\">\n                <div className=\"hidden inline-block md:ml-12 md:flex md:justify-middle md:space-x-16 mx-16 align-middle font-20\">\n                  <Link\n                    to=\"/\"\n                    className=\"border-indigo-500 text-gray-900 inline-flex items-center px-1 pt-1 font-20 font-semibold\"\n                  >\n                    HOME\n                  </Link>\n                  <Link\n                    to=\"/main\"\n                    className=\"border-indigo-500 text-gray-900 inline-flex items-center px-1 pt-1 font-20 font-semibold\"\n                  >\n                    SWAP\n                  </Link>\n                  <Link\n                    to=\"/dex\"\n                    className=\"border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700 inline-flex items-center px-1 pt-1  font-20 font-semibold\"\n                  >\n                    ENTEPRISE DEX\n                  </Link>\n                  <Link\n                    to=\"/dashboard\"\n                    className=\"border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700 inline-flex items-center px-1 pt-1  font-20 font-semibold\"\n                  >\n                    ACCESS ORG 3.0\n                  </Link>\n                  <Link\n                    to={{ pathname: \"https://equinox.business/\" }}\n                    target=\"_blank\"\n                    className=\"border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700 inline-flex items-center px-1 pt-1  font-20 font-semibold\"\n                  >\n                    ABOUT EQX\n                  </Link>\n                </div>\n                <div id=\"connect\" className=\"block toggle-btn flex justify-between\">\n                  {/* <div className={onBtnClass} onClick={() => offChain()}>\n                    <input\n                      type=\"checkbox\"\n                      className=\"hidden\"\n                      checked={offChk}\n                    />\n                    <label className=\"font-11\">\n                      <span className=\"font-extrabold\">OFF</span>-WALLET\n                    </label>\n                  </div>\n                  <div className={offBtnClass} onClick={() => onChain()}>\n                    <input type=\"checkbox\" className=\"hidden\" checked={onChk} />\n                    <label className=\"font-11\">\n                      <span className=\"font-extrabold\">ON</span>-WALLET\n                    </label>\n                  </div> */}\n                  <Accountmodal/>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <Disclosure.Panel className=\"md:hidden\">\n            <div className=\"pt-2 pb-3 space-y-1\">\n              <Link\n                to=\"/\"\n                className=\"bg-indigo-50 border-indigo-500 text-indigo-700 block pl-3 pr-4 py-2 border-l-4 text-base font-medium sm:pl-5 sm:pr-6\"\n              >\n                HOME\n              </Link>\n              <Link\n                to=\"/main\"\n                className=\"border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-700 block pl-3 pr-4 py-2 border-l-4 text-base font-medium sm:pl-5 sm:pr-6\"\n              >\n                SWAP\n              </Link>\n              <Link\n                to=\"/dex\"\n                className=\"border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-700 block pl-3 pr-4 py-2 border-l-4 text-base font-medium sm:pl-5 sm:pr-6\"\n              >\n                ENTERPRISE DEX\n              </Link>\n              <Link\n                to=\"/dashboard\"\n                className=\"border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-700 block pl-3 pr-4 py-2 border-l-4 text-base font-medium sm:pl-5 sm:pr-6\"\n              >\n                ACCESS ORG 3.0\n              </Link>\n              <Link\n                to={{ pathname: \"https://equinox.business/\" }}\n                target=\"_blank\"\n                className=\"border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-700 block pl-3 pr-4 py-2 border-l-4 text-base font-medium sm:pl-5 sm:pr-6\"\n              >\n                ABOUT EQX\n              </Link>\n            </div>\n          </Disclosure.Panel>\n        </>\n      )}\n    </Disclosure>\n  );\n}\n","/home/neha/exq-ico-1/src/components/Footer/index.tsx",["145","146","147","148","149","150"],"import React from \"react\";\nimport { ChevronDoubleRightIcon } from \"@heroicons/react/outline\";\nimport \"./style.css\";\n// import tw from '../../assets/tw.png';\n\nconst Footer = () => {\n  return (\n    <footer className=\"text-gray-600 body-font\">\n      <hr />\n      <div className=\"container px-5 py-8 mx-auto flex items-center sm:flex-row flex-col\">\n        <a className=\"flex title-font font-small items-center md:justify-start justify-center text-gray-900\">\n          <span className=\" footer1 ml-3 text-base \">\n            {\" \"}\n            COPYRIGHT &#169; 2021 EQUINOXAPP BUSINESS\n          </span>\n        </a>\n        {/* <a href=\"http://infoversetech.com\">\n          <p className=\"text-sm text-gray-500 sm:ml-4 sm:pl-4 sm:border-l-2 sm:border-gray-200 sm:py-2 sm:mt-0 mt-4\">\n            InfoVerse Tech Services{\" \"}\n          </p>\n        </a> */}\n\n        <span className=\"inline-flex sm:ml-auto sm:mt-0 mt-4 justify-center sm:justify-start\">\n          <a className=\"text-gray-500\">\n            <svg\n              fill=\"currentColor\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              className=\"w-5 h-5\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path d=\"M18 2h-3a5 5 0 00-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 011-1h3z\"></path>\n            </svg>\n          </a>\n          <a className=\"ml-3 text-gray-500\">\n            <svg\n              fill=\"currentColor\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              className=\"w-5 h-5\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path d=\"M23 3a10.9 10.9 0 01-3.14 1.53 4.48 4.48 0 00-7.86 3v1A10.66 10.66 0 013 4s-4 9 5 13a11.64 11.64 0 01-7 2c9 5 20 0 20-11.5a4.5 4.5 0 00-.08-.83A7.72 7.72 0 0023 3z\"></path>\n            </svg>\n          </a>\n          <a className=\"ml-3 text-gray-500\">\n            <svg\n              fill=\"none\"\n              stroke=\"currentColor\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"2\"\n              className=\"w-5 h-5\"\n              viewBox=\"0 0 24 24\"\n            >\n              <rect width=\"20\" height=\"20\" x=\"2\" y=\"2\" rx=\"5\" ry=\"5\"></rect>\n              <path d=\"M16 11.37A4 4 0 1112.63 8 4 4 0 0116 11.37zm1.5-4.87h.01\"></path>\n            </svg>\n          </a>\n          <a className=\"ml-3 text-gray-500\">\n            <svg\n              fill=\"currentColor\"\n              stroke=\"currentColor\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              stroke-width=\"0\"\n              className=\"w-5 h-5\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                stroke=\"none\"\n                d=\"M16 8a6 6 0 016 6v7h-4v-7a2 2 0 00-2-2 2 2 0 00-2 2v7h-4v-7a6 6 0 016-6zM2 9h4v12H2z\"\n              ></path>\n              <circle cx=\"4\" cy=\"4\" r=\"2\" stroke=\"none\"></circle>\n            </svg>\n          </a>\n        </span>\n      </div>\n    </footer>\n    // <footer className=\" footer-1 bg-gray-100 py-8 sm:py-12 container d-md-flex py-4\">\n    //   <div className=\"me-md-auto text-center text-md-start font-semibold\">\n    //     <div className=\"copyright\">\n    //       COPYRIGHT &#169; 2021 EQUINOXAPP BUSINESS\n    //     </div>\n    //     <div className=\"credits\">\n    //       <a href=\"http://infoversetech.com/\">InfoVerse Tech Services</a>\n    //     </div>\n    //   </div>\n    //   <div className=\" flex mx-w-md  justify-end \">\n    //     <div className=\"\" style={{ wordWrap: \"break-word\" }}>\n    //       <span className=\"my-auto font-extrabold font-14 \">SUBSCRIBE</span>\n    //       <ChevronDoubleRightIcon\n    //         className=\"h-6 inline-block my-auto font-extrabold\"\n    //         aria-hidden=\"true\"\n    //       />\n    //       <div className=\"inline-block\">\n    //         <div className=\"footer-ico\">\n    //           <a href=\"#\">\n    //             <i className=\"fa fa-twitter fa-2x\"></i>\n    //           </a>\n    //         </div>\n    //         <div className=\"footer-ico\">\n    //           <a href=\"#\">\n    //             <i className=\"fa fa-paper-plane-o fa-2x\"></i>\n    //           </a>\n    //         </div>\n    //         <div className=\"footer-ico\">\n    //           <a href=\"#\">\n    //             <i className=\"fa fa-at fa-2x\"></i>\n    //           </a>\n    //         </div>\n    //         <div className=\"footer-ico\">\n    //           <a href=\"#\">\n    //             <i className=\"fa fa-github  fa-2x\"></i>\n    //           </a>\n    //         </div>\n    //       </div>\n    //     </div>\n    //   </div>\n    // </footer>\n  );\n};\n\nexport default Footer;\n","/home/neha/exq-ico-1/src/components/pages/Home1.tsx",["151","152","153","154","155","156","157"],"import React from \"react\";\n\n//import Main from \"../Main/main\";\nimport { Row, Col } from \"reactstrap\";\nimport moon from \"../pages/assets/img/moon.png\";\nimport telegram from \"../pages/assets/img/telegram.png\";\nimport twitter from \"../pages/assets/img/twitter.png\";\nimport web from \"../pages/assets/img/web-link.png\";\nimport UnicornLogo from \"../assets/UNICORN FINANCE.png\";\nimport \"../../index.css\";\nimport \"../pages/home.css\";\nimport Countdown from \"../countdown/countdown\";\n\nconst Home1 = (props: any) => {\n  return (\n    // <div>\n    <div className=\"site-header d-flex flex-column align-items-center justify-content-between home mt-2\">\n      {/* <Countdown></Countdown> */}\n      <Row className=\"home-main\">\n        <Col lg={2} xs={12} className=\"main-icon\">\n          <a href=\"https://equinox.business/\" target=\"_blank noreferrer\">\n            <img src={web} className=\"icon\"></img>\n          </a>\n          <a\n            href=\"https://mobile.twitter.com/eqxforbusiness\"\n            target=\"_blank noreferrer\"\n          >\n            <img src={twitter} className=\"icon\"></img>\n          </a>\n\n          <a href=\"https://t.me/eqxcommunity\" target=\"_blank noreferrer\">\n            <img src={telegram} className=\"icon\"></img>\n          </a>\n        </Col>\n        <Col lg={5} xs={12} className=\"main-heading\">\n          <h3 className=\"heading1\">\n            <span className=\"subheading2\">TO GO</span>\n          </h3>\n          <h4 className=\"sub-header2\">Get ready to deploy your ORG 3.0</h4>\n          <p className=\"main-content\">\n            Equinox Business is bringing for the first time Enterprise DEX\n            focused more on community's investment protection through wielding\n            powers by holding governance tokens, built-in distribution system of\n            Salaries, Dividends and paying bills through Cryptos and managing\n            the entire project as a Business Enterprise using onchain project\n            management and ERP modules.\n          </p>\n          <Row>\n            <Col lg={6}>\n              <a\n                // href={pdf}\n                href=\"#\"\n                className=\"btn  mt-3  main-btn1\"\n                target=\"_blank noreferrer\"\n              >\n                WHITEPAPER V 1.0\n              </a>\n            </Col>\n            <Col lg={6}>\n              <a href=\"#coming-soon\" className=\"btn  mt-3 main-btn2\">\n                CROWDSALE\n              </a>\n            </Col>\n          </Row>\n        </Col>\n        <Col lg={5} className=\"bg-moon\">\n          <img src={moon} className=\"moon-img\"></img>\n        </Col>\n      </Row>\n\n      <Row className=\"home-main2\" id=\"coming-soon\">\n        <Col lg={12} className=\"main-heading2\">\n          <h1 className=\"heading1\">\n            <span className=\"subheading1\">EQX </span>\n            <span className=\"subheading3\">CROWDSALE </span>\n            {/* <span className=\"subheading2\">SOON</span> */}\n          </h1>\n\n          <p className=\"main-content2\">\n            <span className=\"eqx\">Equinox Token Info:</span>\n            Equinox with a symbol <span className=\"dex\"> EQX </span>is a fixed\n            supply BEP20 standard digital token.\n            <br />\n            Contract Address:{\" \"}\n            <a\n              href=\"https://bscscan.com/token/0xe1dba43428cc6ab2672061ee3385af09f1c85781\"\n              className=\"tech mt-3\"\n              target=\"_blank noreferrer\"\n            >\n              <span className=\"address\">\n                0xe1dba43428cc6ab2672061ee3385af09f1c85781\n              </span>\n            </a>\n            <br />\n            Total Supply: 100 Million\n            <br />\n            Launch Date: 19 June 2021\n            <br />\n            Use cases: <br />\n            1) Hold certain number of EQX to register ORG 3.0 and use Equinox's\n            Ecosystem\n            <br />\n            2) Dividend distribution to EQX holders\n            <br />\n            3) Transaction fee in EQX for Equinox's Blockchain proposed to be\n            launched in Version 2.0\n            <br />\n            Proposed supply for Crowdsale: 15 Million Only\n            <br />\n            Crypto assets allowed for contribution: <br />\n            <span className=\"dex\">BTC, ETH, BNB, BUSD, USDT</span>\n            <br />\n          </p>\n        </Col>\n      </Row>\n    </div>\n    // </div>\n  );\n};\n\nexport default Home1;\n","/home/neha/exq-ico-1/src/helpers/addressHelper.js",[],"/home/neha/exq-ico-1/src/helpers/currentWalletHelper.js",[],"/home/neha/exq-ico-1/src/Config/contracts.js",[],"/home/neha/exq-ico-1/src/helpers/setterFunctions.js",["158"],"import { getWeb3 } from \"./currentWalletHelper\"\nimport { getAddress } from \"./addressHelper\";\nimport contracts from \"../Config/contracts\";\nimport { getCrowdsaleContract, getEquivalentToken, getTokenContract } from './getterFunctions'\nimport BigNumber from 'bignumber.js';\n\nexport const buyToken = async (tokenAmount, referrer, tokenName, account) => {\n    let web3 = await getWeb3()\n    let contract = await getCrowdsaleContract();\n    let value = 0;\n    // console.log(\"token type is --------->\", contracts[tokenName].type);\n\n    // big Number\n    if (contracts[tokenName].type == 2) {\n        value = await getEquivalentToken(tokenAmount, tokenName);\n    }\n    value = new BigNumber(value).multipliedBy(new BigNumber(10).exponentiatedBy(new BigNumber(18)));\n    console.log(\"value--------->\", referrer, tokenAmount, contracts[tokenName].type)\n    tokenAmount = await web3.utils.toWei(tokenAmount.toString())\n    let res = await contract.methods.buyTokens(referrer, tokenAmount, contracts[tokenName].type).send({ from: account, value: value })\n    console.log(\"token buy--------->\", res)\n    return res;\n}\n\nexport const approveTokens = async (tokenName, account) => {\n    let token = await getTokenContract(tokenName);\n    let crowdsaleAddress = await getAddress(contracts.crowdsale);\n    let tokenAmount = \"10000000000000000000000000000000000000000\";\n    let res = await token.methods.approve(crowdsaleAddress, tokenAmount).send({ from: account })\n    return res;\n}\n\n","/home/neha/exq-ico-1/src/helpers/numberFormatter.js",[],"/home/neha/exq-ico-1/src/components/header/index.js",["159","160"],"import React from 'react'\nimport AccountModal from \"./Accountmodal\";\nimport { useEffect } from \"react\";\nimport { getAllowance, getBalance, getTokenContract } from \"../../helpers/getterFunctions\";\nimport { connect } from \"react-redux\";\nimport \"./../../App.css\";\n\nfunction Header(props) {\n\n  useEffect(() => {\n    // console.log(\"here\")\n    getTokenContract(\"usdt\")\n    // if (props.account && props.account.account) {\n    //   console.log(\"props\",props.account)\n    //   getAllowance(\"usdt\", props.account.account)\n    //   // getBalance(\"usdt\", props.account.account)\n    // }\n  }, [props.account])\n  return (\n    <header className=\"header\">\n      <AccountModal />\n    </header>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    account: state.account,\n\n  };\n};\n\nexport default connect(mapStateToProps)(Header);\n\n","/home/neha/exq-ico-1/src/components/header/Accountmodal.js",["161","162","163","164","165","166","167","168","169","170","171"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport Web3 from \"web3\";\nimport { connect } from \"react-redux\";\nimport { accountUpdate } from \"./../../redux/actions\";\nimport { Button } from \"reactstrap\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport GeneralModal from \"./wrongNetworkModal\";\nimport \"../header.css\";\n\nfunction initWeb3(provider) {\n  const web3 = new Web3(provider);\n\n  web3.eth.extend({\n    methods: [\n      {\n        name: \"chainId\",\n        call: \"eth_chainId\",\n        outputFormatter: web3.utils.hexToNumber,\n      },\n    ],\n  });\n\n  return web3;\n}\n\nconst AccountModal = (props) => {\n  const [currentAccount, setCurrentAccount] = useState(null);\n  const [wrongNetwork, setWrongNetwork] = useState(false);\n  const [onBtnClass, setOnBtnClass] = useState(\n    \"inline-block chain font-11 shadow-md\"\n  );\n  const [offBtnClass, setOffBtnClass] = useState(\n    \"inline-block chain-disabled font-11\"\n  );\n  let web3Modal = null;\n  let web3 = null;\n  let provider = null;\n\n  // to initilize the web3Modal\n\n  const init = async () => {\n    const providerOptions = {\n      walletconnect: {\n        package: WalletConnectProvider,\n        options: {\n          infuraId: \"c3f6ce1953e4470191a8d12b8ba92672\",\n          rpcUrl: process.env.REACT_APP_RPC_URL,\n        },\n      },\n    };\n\n    web3Modal = new Web3Modal({\n      network: process.env.REACT_APP_NETWORK,\n      cacheProvider: false,\n      providerOptions: providerOptions,\n    });\n    provider = await detectEthereumProvider();\n  };\n\n  init();\n\n  useEffect(() => {\n    async function update() {\n      if (window.sessionStorage.getItem(\"selected_account\") != null) {\n        setCurrentAccount(window.sessionStorage.getItem(\"selected_account\"));\n        if (provider) {\n          web3 = await initWeb3(provider);\n          props.dispatch(\n            accountUpdate({\n              account: window.sessionStorage.getItem(\"selected_account\"),\n            })\n          );\n        }\n      }\n    }\n\n    update();\n  }, [window.sessionStorage.getItem(\"selected_Account\"), web3, provider]);\n  // action on connect wallet button\n\n  const onConnect = async () => {\n    //Detect Provider\n    try {\n      provider = await web3Modal.connect();\n      if (provider.open) {\n        await provider.open();\n        web3 = await initWeb3(provider);\n        web3.eth.getAccounts(console.log);\n      }\n      window.sessionStorage.setItem(\"Provider\", provider);\n      if (!provider) {\n        console.log(\"no provider found\");\n      } else {\n        web3 = new Web3(provider);\n        await ConnectWallet();\n      }\n      const chainId = await web3.eth.net.getId();\n\n      if (chainId.toString() !== process.env.REACT_APP_CHAIN_ID) {\n        setWrongNetwork(true);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // connect wallet\n\n  const ConnectWallet = async () => {\n    if (\"caches\" in window) {\n      caches.keys().then((names) => {\n        // Delete all the cache files\n        names.forEach((name) => {\n          caches.delete(name);\n        });\n      });\n    }\n    try {\n      const chainId = await web3.eth.net.getId();\n\n      if (chainId.toString() !== process.env.REACT_APP_CHAIN_ID) {\n        console.log(\"Wrong network\");\n        setWrongNetwork(true);\n        props.dispatch(\n          accountUpdate({\n            account: null,\n          })\n        );\n      } else {\n        // Get list of accounts of the connected wallet\n        setWrongNetwork(false);\n        const accounts = await web3.eth.getAccounts();\n\n        // MetaMask does not give you all accounts, only the selected account\n        window.sessionStorage.setItem(\"selected_account\", accounts[0]);\n        const chainId = await web3.eth.net.getId();\n        props.dispatch(\n          accountUpdate({\n            account: accounts[0],\n          })\n        );\n        setCurrentAccount(accounts[0]);\n        console.log(\"connected Account\", accounts[0]);\n      }\n    } catch (error) {\n      if (error.message) {\n        console.log(\"error\", error.message);\n      }\n    }\n  };\n\n  //  disconnect wallet\n\n  const onDisconnect = useCallback(async () => {\n    if (!web3) {\n      window.sessionStorage.removeItem(\"selected_account\");\n    }\n    if (web3) {\n      const chainId = await web3.eth.net.getId();\n      props.dispatch(\n        accountUpdate({\n          account: null,\n        })\n      );\n    }\n    window.sessionStorage.removeItem(\"selected_account\");\n    window.sessionStorage.removeItem(\"Provider\");\n    await setCurrentAccount(null);\n    if (web3Modal) await web3Modal.clearCachedProvider();\n    web3Modal = null;\n    if (web3 && web3.currentProvider && web3.currentProvider.close) {\n      await web3.currentProvider.disconnect();\n    }\n    if (\"caches\" in window) {\n      caches.keys().then((names) => {\n        // Delete all the cache files\n        names.forEach((name) => {\n          caches.delete(name);\n        });\n      });\n      if (!wrongNetwork) window.location.reload(true);\n    }\n  }, [currentAccount]);\n\n  useEffect(() => {\n    console.log(\"provider\", provider);\n    if (provider) {\n      provider.on(\"chainChanged\", async (_chainId) => {\n        const chainId = parseInt(_chainId, 16);\n\n        if (chainId.toString() !== process.env.REACT_APP_CHAIN_ID) {\n          if (currentAccount) console.log(\"Wrong Network first\");\n          setWrongNetwork(true);\n          props.dispatch(\n            accountUpdate({\n              account: null,\n            })\n          );\n          onDisconnect();\n        } else {\n          setWrongNetwork(false);\n          props.dispatch(\n            accountUpdate({\n              account: currentAccount,\n            })\n          );\n        }\n      });\n    }\n  }, [onDisconnect]);\n\n  // function to detect account change\n\n  useEffect(() => {\n    if (provider) {\n      provider.on(\"accountsChanged\", async function (accounts) {\n        const id = await provider.request({ method: \"eth_chainId\" });\n        const chainId = parseInt(id, 16);\n        console.log(\"Account changed\", accounts[0]);\n        if (\n          chainId.toString() == process.env.REACT_APP_CHAIN_ID &&\n          currentAccount\n        ) {\n          setCurrentAccount(accounts[0]);\n          console.log(\"Account changed\", accounts[0]);\n          window.sessionStorage.removeItem(\"selected_account\");\n          window.sessionStorage.setItem(\"selected_account\", accounts[0]);\n          props.dispatch(\n            accountUpdate({\n              account: accounts[0],\n            })\n          );\n        } else if (chainId.toString() != process.env.REACT_APP_CHAIN_ID) {\n          console.log(\"Wrong Network\");\n          setWrongNetwork(true);\n          props.dispatch(\n            accountUpdate({\n              account: null,\n            })\n          );\n          window.sessionStorage.removeItem(\"selected_account\");\n          setCurrentAccount(null);\n          await onDisconnect();\n        }\n      });\n    }\n  }, [currentAccount]);\n\n  // function to detect network change\n\n  useEffect(() => {\n    async function updateAccount() {\n      if (provider) {\n        window.sessionStorage.setItem(\"selected_account\", currentAccount);\n\n        props.dispatch(\n          accountUpdate({\n            account: currentAccount,\n          })\n        );\n      }\n    }\n    if (currentAccount) {\n      updateAccount();\n    }\n  }, [currentAccount]);\n  const [offChk, setOffChk] = useState(true);\n  const [onChk, setOnChk] = useState(false);\n\n  async function offChain() {\n    setOffBtnClass(\"inline-block chain-disabled font-11\");\n    setOnBtnClass(\"inline-block chain font-11 shadow-md\");\n    if (currentAccount)\n      await onDisconnect()\n    setOffChk(false);\n    setOnChk(true);\n  }\n\n  async function onChain() {\n    if (!currentAccount)\n      await onConnect()\n    setOnBtnClass(\"inline-block chain-disabled font-11\");\n    setOffBtnClass(\"inline-block chain font-11 shadow-md\");\n    setOffChk(true);\n    setOnChk(false);\n  }\n  return (\n    <>\n\n      {window.sessionStorage.getItem(\"selected_account\")\n        ? window.sessionStorage.getItem(\"selected_account\").slice(0, 5) +\n        \"...\" +\n        window.sessionStorage.getItem(\"selected_account\").slice(37, 42)\n        : \"\"\n      }\n\n\n\n      <div className={onBtnClass} onClick={() => offChain()}>\n        <input\n          type=\"checkbox\"\n          className=\"hidden\"\n          checked={offChk}\n        />\n        <label className=\"font-11\">\n          <span className=\"font-extrabold\">OFF</span>-WALLET\n        </label>\n      </div>\n      <div className={offBtnClass} onClick={() => onChain()}>\n        <input type=\"checkbox\" className=\"hidden\" checked={onChk} />\n        <label className=\"font-11\">\n          <span className=\"font-extrabold\">ON</span>-WALLET\n        </label>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    account: state.account,\n  };\n};\n\nexport default connect(mapStateToProps)(AccountModal);\n","/home/neha/exq-ico-1/src/redux/reducers/index.js",[],"/home/neha/exq-ico-1/src/components/header/wrongNetworkModal.js",[],"/home/neha/exq-ico-1/src/redux/constants/action-types.js",[],"/home/neha/exq-ico-1/src/redux/actions/index.js",[],{"ruleId":"172","severity":1,"message":"173","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":18},{"ruleId":"172","severity":1,"message":"176","line":6,"column":8,"nodeType":"174","messageId":"175","endLine":6,"endColumn":11},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":14},{"ruleId":"181","severity":1,"message":"183","line":5,"column":10,"nodeType":"174","messageId":"175","endLine":5,"endColumn":26},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"172","severity":1,"message":"184","line":3,"column":8,"nodeType":"174","messageId":"175","endLine":3,"endColumn":20},{"ruleId":"172","severity":1,"message":"185","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":21},{"ruleId":"172","severity":1,"message":"186","line":6,"column":8,"nodeType":"174","messageId":"175","endLine":6,"endColumn":12},{"ruleId":"172","severity":1,"message":"187","line":7,"column":10,"nodeType":"174","messageId":"175","endLine":7,"endColumn":13},{"ruleId":"172","severity":1,"message":"188","line":7,"column":15,"nodeType":"174","messageId":"175","endLine":7,"endColumn":18},{"ruleId":"181","severity":1,"message":"189","line":4,"column":10,"nodeType":"174","messageId":"175","endLine":4,"endColumn":20},{"ruleId":"190","severity":1,"message":"191","line":55,"column":23,"nodeType":"192","messageId":"193","endLine":55,"endColumn":25},{"ruleId":"181","severity":1,"message":"194","line":108,"column":13,"nodeType":"174","messageId":"175","endLine":108,"endColumn":17},{"ruleId":"181","severity":1,"message":"194","line":148,"column":13,"nodeType":"174","messageId":"175","endLine":148,"endColumn":17},{"ruleId":"181","severity":1,"message":"195","line":12,"column":3,"nodeType":"174","messageId":"175","endLine":12,"endColumn":11},{"ruleId":"181","severity":1,"message":"196","line":14,"column":3,"nodeType":"174","messageId":"175","endLine":14,"endColumn":13},{"ruleId":"181","severity":1,"message":"197","line":15,"column":3,"nodeType":"174","messageId":"175","endLine":15,"endColumn":18},{"ruleId":"181","severity":1,"message":"198","line":27,"column":3,"nodeType":"174","messageId":"175","endLine":27,"endColumn":16},{"ruleId":"181","severity":1,"message":"199","line":34,"column":8,"nodeType":"174","messageId":"175","endLine":34,"endColumn":20},{"ruleId":"181","severity":1,"message":"200","line":41,"column":10,"nodeType":"174","messageId":"175","endLine":41,"endColumn":20},{"ruleId":"181","severity":1,"message":"201","line":48,"column":10,"nodeType":"174","messageId":"175","endLine":48,"endColumn":21},{"ruleId":"202","severity":1,"message":"203","line":60,"column":6,"nodeType":"204","endLine":60,"endColumn":13,"suggestions":"205"},{"ruleId":"202","severity":1,"message":"203","line":67,"column":6,"nodeType":"204","endLine":67,"endColumn":21,"suggestions":"206"},{"ruleId":"202","severity":1,"message":"207","line":123,"column":6,"nodeType":"204","endLine":123,"endColumn":61,"suggestions":"208"},{"ruleId":"202","severity":1,"message":"209","line":185,"column":6,"nodeType":"204","endLine":185,"endColumn":34,"suggestions":"210"},{"ruleId":"190","severity":1,"message":"191","line":211,"column":32,"nodeType":"192","messageId":"193","endLine":211,"endColumn":34},{"ruleId":"190","severity":1,"message":"191","line":236,"column":24,"nodeType":"192","messageId":"193","endLine":236,"endColumn":26},{"ruleId":"190","severity":1,"message":"191","line":254,"column":17,"nodeType":"192","messageId":"193","endLine":254,"endColumn":19},{"ruleId":"190","severity":1,"message":"191","line":270,"column":24,"nodeType":"192","messageId":"193","endLine":270,"endColumn":26},{"ruleId":"190","severity":1,"message":"191","line":402,"column":28,"nodeType":"192","messageId":"193","endLine":402,"endColumn":30},{"ruleId":"172","severity":1,"message":"211","line":3,"column":10,"nodeType":"174","messageId":"175","endLine":3,"endColumn":18},{"ruleId":"172","severity":1,"message":"212","line":4,"column":27,"nodeType":"174","messageId":"175","endLine":4,"endColumn":33},{"ruleId":"172","severity":1,"message":"213","line":9,"column":10,"nodeType":"174","messageId":"175","endLine":9,"endColumn":20},{"ruleId":"172","severity":1,"message":"214","line":14,"column":10,"nodeType":"174","messageId":"175","endLine":14,"endColumn":20},{"ruleId":"172","severity":1,"message":"215","line":17,"column":10,"nodeType":"174","messageId":"175","endLine":17,"endColumn":21},{"ruleId":"172","severity":1,"message":"216","line":20,"column":10,"nodeType":"174","messageId":"175","endLine":20,"endColumn":16},{"ruleId":"172","severity":1,"message":"217","line":21,"column":10,"nodeType":"174","messageId":"175","endLine":21,"endColumn":15},{"ruleId":"172","severity":1,"message":"218","line":23,"column":12,"nodeType":"174","messageId":"175","endLine":23,"endColumn":20},{"ruleId":"172","severity":1,"message":"219","line":30,"column":12,"nodeType":"174","messageId":"175","endLine":30,"endColumn":19},{"ruleId":"172","severity":1,"message":"220","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":32},{"ruleId":"221","severity":1,"message":"222","line":11,"column":9,"nodeType":"223","endLine":11,"endColumn":110},{"ruleId":"221","severity":1,"message":"222","line":24,"column":11,"nodeType":"223","endLine":24,"endColumn":40},{"ruleId":"221","severity":1,"message":"222","line":36,"column":11,"nodeType":"223","endLine":36,"endColumn":45},{"ruleId":"221","severity":1,"message":"222","line":48,"column":11,"nodeType":"223","endLine":48,"endColumn":45},{"ruleId":"221","severity":1,"message":"222","line":62,"column":11,"nodeType":"223","endLine":62,"endColumn":45},{"ruleId":"172","severity":1,"message":"224","line":9,"column":8,"nodeType":"174","messageId":"175","endLine":9,"endColumn":19},{"ruleId":"172","severity":1,"message":"225","line":12,"column":8,"nodeType":"174","messageId":"175","endLine":12,"endColumn":17},{"ruleId":"226","severity":1,"message":"227","line":22,"column":13,"nodeType":"223","endLine":22,"endColumn":45},{"ruleId":"226","severity":1,"message":"227","line":28,"column":13,"nodeType":"223","endLine":28,"endColumn":49},{"ruleId":"226","severity":1,"message":"227","line":32,"column":13,"nodeType":"223","endLine":32,"endColumn":50},{"ruleId":"221","severity":1,"message":"228","line":50,"column":15,"nodeType":"223","endLine":55,"endColumn":16},{"ruleId":"226","severity":1,"message":"227","line":67,"column":11,"nodeType":"223","endLine":67,"endColumn":48},{"ruleId":"190","severity":1,"message":"191","line":14,"column":35,"nodeType":"192","messageId":"193","endLine":14,"endColumn":37},{"ruleId":"181","severity":1,"message":"229","line":4,"column":10,"nodeType":"174","messageId":"175","endLine":4,"endColumn":22},{"ruleId":"181","severity":1,"message":"230","line":4,"column":24,"nodeType":"174","messageId":"175","endLine":4,"endColumn":34},{"ruleId":"181","severity":1,"message":"231","line":5,"column":10,"nodeType":"174","messageId":"175","endLine":5,"endColumn":16},{"ruleId":"181","severity":1,"message":"232","line":9,"column":8,"nodeType":"174","messageId":"175","endLine":9,"endColumn":20},{"ruleId":"202","severity":1,"message":"233","line":69,"column":18,"nodeType":"234","endLine":69,"endColumn":42},{"ruleId":"181","severity":1,"message":"235","line":138,"column":15,"nodeType":"174","messageId":"175","endLine":138,"endColumn":22},{"ruleId":"181","severity":1,"message":"235","line":161,"column":13,"nodeType":"174","messageId":"175","endLine":161,"endColumn":20},{"ruleId":"202","severity":1,"message":"236","line":172,"column":17,"nodeType":"237","endLine":172,"endColumn":21},{"ruleId":"202","severity":1,"message":"238","line":212,"column":6,"nodeType":"204","endLine":212,"endColumn":20,"suggestions":"239"},{"ruleId":"190","severity":1,"message":"191","line":223,"column":30,"nodeType":"192","messageId":"193","endLine":223,"endColumn":32},{"ruleId":"190","severity":1,"message":"240","line":235,"column":39,"nodeType":"192","messageId":"193","endLine":235,"endColumn":41},{"ruleId":"202","severity":1,"message":"241","line":249,"column":6,"nodeType":"204","endLine":249,"endColumn":22,"suggestions":"242"},{"ruleId":"202","severity":1,"message":"243","line":268,"column":6,"nodeType":"204","endLine":268,"endColumn":22,"suggestions":"244"},"@typescript-eslint/no-unused-vars","'GeneralNav' is defined but never used.","Identifier","unusedVar","'App' is defined but never used.","no-native-reassign",["245"],"no-negated-in-lhs",["246"],"no-unused-vars","'Header' is defined but never used.","'getTokenContract' is defined but never used.","'ToggleButton' is defined but never used.","'CardContainer' is defined but never used.","'Main' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'getAccount' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'web3' is assigned a value but never used.","'CardText' is defined but never used.","'InputGroup' is defined but never used.","'InputGroupAddon' is defined but never used.","'getEQXBalance' is defined but never used.","'AccountModal' is defined but never used.","'isDisabled' is assigned a value but never used.","'copySuccess' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBalance'. Either include it or remove the dependency array.","ArrayExpression",["247"],["248"],"React Hook useEffect has a missing dependency: 'checkAllowance'. Either include it or remove the dependency array.",["249"],"React Hook useCallback has missing dependencies: 'checkAllowance' and 'getBalance'. Either include them or remove the dependency array.",["250"],"'BellIcon' is defined but never used.","'Router' is defined but never used.","'classNames' is defined but never used.","'onBtnClass' is assigned a value but never used.","'offBtnClass' is assigned a value but never used.","'offChk' is assigned a value but never used.","'onChk' is assigned a value but never used.","'offChain' is defined but never used.","'onChain' is defined but never used.","'ChevronDoubleRightIcon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'UnicornLogo' is defined but never used.","'Countdown' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'getAllowance' is defined but never used.","'getBalance' is defined but never used.","'Button' is defined but never used.","'GeneralModal' is defined but never used.","Assignments to the 'web3' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","AwaitExpression","'chainId' is assigned a value but never used.","Assignments to the 'web3Modal' variable from inside React Hook useCallback will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useCallback.","Literal","React Hook useEffect has missing dependencies: 'currentAccount', 'props', and 'provider'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["251"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'onDisconnect', 'props', and 'provider'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["252"],"React Hook useEffect has missing dependencies: 'props' and 'provider'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["253"],"no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"262","fix":"264"},{"desc":"265","fix":"266"},"Update the dependencies array to be: [getBalance, value]",{"range":"267","text":"268"},"Update the dependencies array to be: [getBalance, props.account]",{"range":"269","text":"270"},"Update the dependencies array to be: [value, props.account, inputAmount, transactionOnGoing, checkAllowance]",{"range":"271","text":"272"},"Update the dependencies array to be: [inputAmount, getBalance, checkAllowance]",{"range":"273","text":"274"},"Update the dependencies array to be: [currentAccount, onDisconnect, props, provider]",{"range":"275","text":"276"},{"range":"277","text":"276"},"Update the dependencies array to be: [currentAccount, props, provider]",{"range":"278","text":"279"},[1881,1888],"[getBalance, value]",[1972,1987],"[getBalance, props.account]",[3450,3505],"[value, props.account, inputAmount, transactionOnGoing, checkAllowance]",[5033,5061],"[inputAmount, getBalance, checkAllowance]",[5795,5809],"[currentAccount, onDisconnect, props, provider]",[7013,7029],[7413,7429],"[currentAccount, props, provider]"]